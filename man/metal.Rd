% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metal.R
\name{metal}
\alias{metal}
\title{metal: metal searching algorithm}
\usage{
metal(
  sparsity = 1:10,
  max.nb.features = 1000,
  popSaveFile = "NULL",
  saveFiles = FALSE,
  pathSave = "NULL",
  language = "mix",
  scoreFormula = scoreRatio,
  epsilon = "NULL",
  objective = "auc",
  k_penalty = 0,
  evalToFit = "accuracy_",
  estimate_coefs = FALSE,
  intercept = "NULL",
  testAllSigns = FALSE,
  plot = FALSE,
  verbose = TRUE,
  warnings = FALSE,
  debug = FALSE,
  print_ind_method = "short",
  parallelize.folds = TRUE,
  nCores = 10,
  seed = "NULL",
  experiment.id = "NULL",
  experiment.description = "NULL",
  experiment.save = "nothing",
  list.clfs = "NULL",
  unificator.method = "terga2",
  unificator.evolver = "v2m_new"
)
}
\arguments{
\item{language}{is the language that is used by the different algorithms {bin, bininter, ter, terinter, ratio}, (default:"terinter")}

\item{sparsity:}{number of features in a given model. This is a vector with multiple lengths.}

\item{max.nb.features:}{focuses only on the subset of top most significant features (default:1000)}

\item{popSaveFile:}{(??)}

\item{saveFiles:}{??}

\item{scoreFormula:}{a Function that contains the ratio Formula or other specific ones}

\item{epsilon:}{a small value to be used with the ratio language (useCustomLanguage) (default: NULL). When null it is going to be calculated by the minimum value of X divided by 10.}

\item{objective:}{this can be auc, cor or aic. Terga can also predict regression, other than class prediction. (default:auc)}

\item{estimate_coefs:}{non ternary solution for the aic objective (default:FALSE)}

\item{evalToFit:}{The model performance attribute to use as fitting score (default:"fit_"). Other choices are c("auc_","accuracy_","precision_","recall_","f_score_")}

\item{k_penalty:}{Penalization of the fit by the k_sparsity (default: 0)}

\item{intercept:}{(??) (default:NULL)}

\item{testAllSigns:}{??}

\item{plot:}{plot graphics indicating the evolution of the simulation (default:FALSE)}

\item{verbose:}{print out information on the progress of the algorithm (default:TRUE)}

\item{warnings:}{Print out warnings when runnig (default:FALSE).}

\item{debug:}{print debug information (default:FALSE)}

\item{print_ind_method:}{One of c("short","graphical") indicates how to print a model and subsequently a population during the run (default:"short").}

\item{parallelize.folds:}{parallelize folds when cross-validating (default:TRUE)}

\item{nCores:}{the number of cores to execute the program. If nCores=1 than the program runs in a non parallel mode}

\item{seed:}{the seed to be used for reproductibility. If seed=NULL than it is not taken into account (default:NULL).}

\item{experiment.id:}{The id of the experiment that is to be used in the plots and comparitive analyses (default is the learner's name, when not specified)}

\item{experiment.description:}{A longer description of the experiment. This is important when many experiments are run and can also be printed in by the printExperiment function.}

\item{experiment.save:}{Data from an experiment can be saved with different levels of completness, with options to be selected from c("nothing", "minimal", "full"), default is "minimal"}

\item{list.clfs:}{list of Genetor and Unificator}

\item{unificator.method:}{the default unificator is a terga2. Other one specified will yield a stop of the program.}

\item{unificator.evolver:}{the default evolve method used by the unificator which is by default a terga2.}
}
\value{
an object containing a list of parameters for this classifier
}
\description{
metal is a model search algorithm on a list of beam search approach and get the populations into GA.
}
