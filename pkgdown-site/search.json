[{"path":"https://predomics.github.io/predomicspkg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edi Prifti. Maintainer.","code":""},{"path":"https://predomics.github.io/predomicspkg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Prifti E, Chevaleyre Y, Hanczar B, Belda E, Danchin , Clément K, Zucker J (2020). “Interpretable accurate prediction models metagenomics data.” GigaScience, 9(3), giaa010. ISSN 2047-217X, doi:10.1093/gigascience/giaa010, https://doi.org/10.1093/gigascience/giaa010.","code":"@Article{,   title = {Interpretable and accurate prediction models for metagenomics data},   author = {Edi Prifti and Yann Chevaleyre and Blaise Hanczar and Eugeni Belda and Antoine Danchin and Karine Clément and Jean-Daniel Zucker},   journal = {GigaScience},   year = {2020},   volume = {9},   number = {3},   pages = {giaa010},   month = {March},   issn = {2047-217X},   doi = {10.1093/gigascience/giaa010},   url = {https://doi.org/10.1093/gigascience/giaa010},   abstract = {Background: Microbiome biomarker discovery for patient diagnosis,    prognosis, and risk evaluation is attracting broad interest. Selected groups    of microbial features provide signatures that characterize host disease states    such as cancer or cardio-metabolic diseases. Yet, the current predictive    models stemming from machine learning still behave as black boxes and seldom    generalize well. Their interpretation is challenging for physicians and    biologists, which makes them difficult to trust and use routinely in the    physician–patient decision-making process. Novel methods that provide    interpretability and biological insight are needed. Here, we introduce    “predomics,” an original machine learning approach inspired by microbial    ecosystem interactions that is tailored for metagenomics data. It discovers    accurate predictive signatures and provides unprecedented interpretability.    The decision provided by the predictive model is based on a simple, yet    powerful score computed by adding, subtracting, or dividing cumulative    abundance of microbiome measurements. Results: Tested on >100 datasets, we    demonstrate that predomics models are simple and highly interpretable. Even    with such simplicity, they are at least as accurate as state-of-the-art    methods. The family of best models, discovered during the learning process,    offers the ability to distil biological information and to decipher the    predictability signatures of the studied condition. In a proof-of-concept    experiment, we successfully predicted body corpulence and metabolic    improvement after bariatric surgery using pre-surgery microbiome data.    Conclusions: Predomics is a new algorithm that helps in providing reliable    and trustworthy diagnostic decisions in the microbiome field. Predomics is    in accord with societal and legal requirements that plead for an explainable    artificial intelligence approach in the medical field.}, }"},{"path":"https://predomics.github.io/predomicspkg/index.html","id":"predomics---interpretable-machine-learning-for-omics-data","dir":"","previous_headings":"","what":"Interpretable Prediction in Omics Data","title":"Interpretable Prediction in Omics Data","text":"predomics package offers access original Machine Learning framework implementing several heuristics allow discovering sparse interpretable models large datasets. models efficient adapted classification regression tasks metagenomics datasets commensurable variables. introduce custom BTR (BIN, TER, RATIO) languages describe different types associations variables. Moreover, framework implemented several state---art methods (SOTA) including RF, ENET SVM. predomics package started 2015 evolved quickly since. major improvement came 2023. package comes also predomicsapp, R Shiny application easy training exploration results.","code":""},{"path":[]},{"path":"https://predomics.github.io/predomicspkg/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Interpretable Prediction in Omics Data","text":"Installation Usage Features Screenshots Technologies License Authors FAQs","code":""},{"path":"https://predomics.github.io/predomicspkg/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Interpretable Prediction in Omics Data","text":"introduce predomics package, designed search simple interpretable predictive models omics data specifically metagenomics. models, called BTR (Bin/Ter/Ratio) based novel family languages designed represent microbial interactions microbial ecosystems. Moreover, package proposed four different optimization heuristics allow discover best predictive models. model predomics set indexes dataset (.e. variables) along respective coefficients belonging ternary set {-1, 0, 1} intercept form (+ B + C - K - L - M < intercept). number variables model, also known model size, sparsity parsimony, can vary range provided parameters experiment. predomics impemented following types object: model, can tested isModel(), list, contains information features, languages, fitting scores etc. population models, can tested isPopulation() list model objects. model collection, can tested isModelCollection() list population models objects. grouped model size. classifier, can tested isClf() set parameters, defines learner ready run. object contain also information used training. object passed functions easy handling parameters. experiment, can tested isExperiment() top level object, contains classifier object along learned models organized model collection object. objects can quickly viewed printy() function. existing functions allow conversion one object type instance modelCollectionToPopulation(). experiment can explored using digest() routine along many functions implemented 18K lines code compose package.","code":""},{"path":"https://predomics.github.io/predomicspkg/index.html","id":"heuristics","dir":"","previous_headings":"","what":"Heuristics","title":"Interpretable Prediction in Omics Data","text":"package proposed four different heuristics search best predictive models. Terga1 terga2. algorithms based genetic algorithms. introduce notion population models, set individuals/models can mutated, crossed, evolved selected many generations (epochs). main difference terga1 terga2 former evolve individuals fixed model-size, latter can evolve models different model-size larger populations. also differences core algorithms. Terbeam. algorithm consists using beam search approach. computer science, beam search heuristic search algorithm explores graph expanding subset promising nodes. Beam search optimization best-first search reduces memory requirements. use window given size (, b) two consecutive model-size (k, k+1). best models model-size k used generate combinations model-size k+1 best ones kept next round. size windows fixed parameters beginning experiment. results can also considered population models. method shows best performance far given budget time. Terda. algorithm based standard logistic regression approach. learning linear model real-valued weights GlmNet package, weights rounded either {-1, 0, 1}. Metal. four algorithms presented complement terms model space epxloration. instance, terbeam specialized small models, terda bigger ones terga make sure explore random combinations composed features smaller-sparisty settings yield good results. devised another algorithm named metal (fusion), meta-heuristic based terga2 engine. initial population seeded sets models found either terbeam, terda terga2 next combined evolved together. Metal also capacity evolve models multiple languages time. particularly interest wish discover automatically set rules predicts best studied condition.","code":""},{"path":"https://predomics.github.io/predomicspkg/index.html","id":"predomics-languages","dir":"","previous_headings":"","what":"Predomics languages","title":"Interpretable Prediction in Omics Data","text":"predomics model coded R S3 object, contains certain number attributes among learner (algorithm) generated also language used. languages proposed current version following. Bin/bininter. Let us take following exemple (+ B + C < intercept). bin/bininter language two coefficients binary set {0, 1}. Features appear model coefficient 0, others coefficient 1. difference bin bininter intercept former set zero. Ter/teriter. take example (+ B + C - K - L - M < intercept) can see model size k=6, coefficients ternary set {-1, 0, 1}. Features appear model coefficient 0 others 1 -1. Models positive negative coefficients considered bin models. difference ter terinter intercept former set zero. Ratio. ratio language intercept plays role multiplication factor model form (+B+C)/(K+L+M) < intercept. State art (SOTA). implemnted predomics three state---art algorithms used today field metagenomics, random forest (rf), support vector machines (svmlin, svmrad), respectively using linear radial kernel finally Elastic-Net Regularized Generalized Linear Models (glmnet). parameteres algorithms left default optimized using internal cross-validation techniques.","code":""},{"path":"https://predomics.github.io/predomicspkg/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Interpretable Prediction in Omics Data","text":"questions feedback, please contact us : Email: contact@predomics.com GitHub Issues: Predomics Issues","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/AnalyseStableModels_LOO.html","id":null,"dir":"Reference","previous_headings":"","what":"analyse stability of models from digest — AnalyseStableModels_LOO","title":"analyse stability of models from digest — AnalyseStableModels_LOO","text":"function analyses prevalence features best model different sparsity crossval (still k-folds)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/AnalyseStableModels_LOO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"analyse stability of models from digest — AnalyseStableModels_LOO","text":"","code":"AnalyseStableModels_LOO(X, y, clf, tmp, loo)"},{"path":"https://predomics.github.io/predomicspkg/reference/AnalyseStableModels_LOO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"analyse stability of models from digest — AnalyseStableModels_LOO","text":"X: dataset classify y: variable predict clf: object containing different parameters classifier tmp: digested result object digest","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/AnalyseStableModels_LOO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"analyse stability of models from digest — AnalyseStableModels_LOO","text":"list sparsity frequency feature empirical best model k-folds cross validation","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/LPO_best_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the cross-validation of leave one out for test stability — LPO_best_models","title":"Compute the cross-validation of leave one out for test stability — LPO_best_models","text":"Compute cross-validation emprirical generalization scores.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/LPO_best_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the cross-validation of leave one out for test stability — LPO_best_models","text":"","code":"LPO_best_models(X, y, clf, p = 1, lfolds = NULL, return.all = FALSE, nk = 20)"},{"path":"https://predomics.github.io/predomicspkg/reference/LPO_best_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the cross-validation of leave one out for test stability — LPO_best_models","text":"X: data matrix variables rows observations columns y: response vector clf: clf lfolds: leave one folds cross-validation return.: return results crossvalidation feature stability testing","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/LPO_best_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the cross-validation of leave one out for test stability — LPO_best_models","text":"list containing generalisation scores fold well matrix mean values.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/analyzeImportanceFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzeImportanceFeatures","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzeImportanceFeatures","text":"function takes population models makes three plots, feature prevalence population,  feature abundance class feature prevalence class","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/analyzeImportanceFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzeImportanceFeatures","text":"","code":"analyzeImportanceFeatures(   clf_res,   X,   y,   makeplot = TRUE,   name = \"\",   verbose = TRUE,   pdf.dims = c(width = 25, height = 20),   filter.perc = 0.05,   filter.cv.prev = 0.25,   nb.top.features = 100,   scaled.importance = FALSE,   k_penalty = 0.75/100,   k_max = 0 )"},{"path":"https://predomics.github.io/predomicspkg/reference/analyzeImportanceFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzeImportanceFeatures","text":"clf_res: result experiment multiple exmeriments (list experimenets) X: X dataset compute abundance prevalence y: target class makeplot: make pdf file resulting plots (default:TRUE) name: suffix pdf file (default:\"\") verbose: print informaiton pdf.dims: dimensions pdf object (default: c(w = 25, h = 20)) filter.perc: filter prevalence percentage population 0 1 (default:0.05) filter.cv.prev: keep features found least (default: 0.25, .e 25 percent) cross validation experiments nb.top.features: maximum number (default: 100) important features shown. value NULL  NA, features returned scaled.importance: scaled importance importance multipied prevalence folds. (default = TRUE) used, mean mda  scaled prevalence feature folds ordered subsequently k_penalty: sparsity penalty needed select best models population (default:0.75/100). k_max: select best population given threshold. (default:0) selection performed.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/analyzeImportanceFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzeImportanceFeatures","text":"plots makeplot FALSE","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/analyzeImportanceFeaturesFBM.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize a summary of an experiment/set of experiments — analyzeImportanceFeaturesFBM","title":"Visualize a summary of an experiment/set of experiments — analyzeImportanceFeaturesFBM","text":"Visualization 4 panels corresponding feature prevalence  FBM, feature importance, feature prevalence groups, effect sizes  feature abundances vs y-variable (cliff's delta binary y;  spearman rho continuous y). Can applied single classification task  multiple classification tasks carried X-y dataset","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/analyzeImportanceFeaturesFBM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize a summary of an experiment/set of experiments — analyzeImportanceFeaturesFBM","text":"","code":"analyzeImportanceFeaturesFBM(   clf_res,   X,   y,   makeplot = TRUE,   saveplotobj = TRUE,   name = \"\",   verbose = TRUE,   pdf.dims = c(width = 25, height = 20),   filter.cv.prev = 0.25,   nb.top.features = 100,   scaled.importance = FALSE,   k_penalty = 0.75/100,   k_max = 0 )"},{"path":"https://predomics.github.io/predomicspkg/reference/analyzeImportanceFeaturesFBM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize a summary of an experiment/set of experiments — analyzeImportanceFeaturesFBM","text":"clf_res result experiment multiple experiments  (list experiments) X feature table used input fit function behind experiments  clf_res y target class (binary/continuous) makeplot make pdf file resulting plots (default:TRUE) saveplotobj make .Rda file list individual plots  (default:TRUE) name suffix pdf file (default:\"\") verbose print informaiton pdf.dims dimensions pdf object (default: c(w = 25, h = 20)) filter.cv.prev keep features found least (default: 0.25,  .e 25 percent) cross validation experiments nb.top.features maximum number (default: 100) important  features shown. number features FBM < nb.top.features, number features  FBM shown instead scaled.importance scaled importance importance multiplied  prevalence folds. (default = TRUE) used,  mean mda scaled prevalence feature folds  ordered subsequently k_penalty sparsity penalty needed select best models  population (default:0.75/100). k_max select best population given threshold.  (default:0) selection performed.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/analyzeImportanceFeaturesFBM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize a summary of an experiment/set of experiments — analyzeImportanceFeaturesFBM","text":"plots makeplot FALSE; plot.list list object saved locally  individual plots (including source data) saveplotobj","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/analyzePopulationFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzePopulationFeatures","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzePopulationFeatures","text":"function takes population models makes three plots, feature prevalence population,  feature abundance class feature prevalence class","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/analyzePopulationFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzePopulationFeatures","text":"","code":"analyzePopulationFeatures(   pop,   X,   y,   res_clf,   makeplot = TRUE,   name = \"\",   ord.feat = \"importance\",   make.network = TRUE,   network.layout = \"circular\",   network.alpha = 1e-04,   verbose = TRUE,   pdf.dims = c(width = 25, height = 20),   filter.perc = 0.05,   k_penalty = 0.75/100,   k_max = 0 )"},{"path":"https://predomics.github.io/predomicspkg/reference/analyzePopulationFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzePopulationFeatures","text":"pop: population models X: X dataset compute abundance prevalence y: target class res_clf: results classifier well config object makeplot: make pdf file resulting plots (default:TRUE) name: suffix pdf file (default:\"\") ord.feat: ordering approch use features (default:importance) models, anything  else compute automatic hierarchical ordering based manhattan distance make.network: build network print pdf network.layout: network layout default circular (layout_in_circle) weighted Fruchterman-Reingold otherwise network.alpha: threshold significance network (default:1e-4) verbose: print informaiton pdf.dims: dimensions pdf object (default: c(w = 25, h = 20)) filter.perc: filter prevalence percentage population 0 1 (default:0.05) k_penalty: sparsity penalty needed select best models population (default:0.75/100). k_max: select best population given threshold. (default:0) selection performed.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/analyzePopulationFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — analyzePopulationFeatures","text":"plots makeplot FALSE","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/bestModelFeatureStability.html","id":null,"dir":"Reference","previous_headings":"","what":"analyse stability of models from digest — bestModelFeatureStability","title":"analyse stability of models from digest — bestModelFeatureStability","text":"function analyses prevalence features best model different sparsity crossval (still k-folds)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/bestModelFeatureStability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"analyse stability of models from digest — bestModelFeatureStability","text":"","code":"bestModelFeatureStability(X, y, clf, digested.result, method = \"fuzzy\")"},{"path":"https://predomics.github.io/predomicspkg/reference/bestModelFeatureStability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"analyse stability of models from digest — bestModelFeatureStability","text":"X: dataset classify y: variable predict clf: object containing different parameters classifier digested.result: digest result digest method: wether compute stability best compared best folds (exact), top best (fuzzy)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/bestModelFeatureStability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"analyse stability of models from digest — bestModelFeatureStability","text":"object first list feature presence tables k_sparsity list feature presence frequency","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/bestModelStability.html","id":null,"dir":"Reference","previous_headings":"","what":"analyse stability of models from digest — bestModelStability","title":"analyse stability of models from digest — bestModelStability","text":"function analyses prevalence features best model different sparsity crossval (still k-folds)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/bestModelStability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"analyse stability of models from digest — bestModelStability","text":"","code":"bestModelStability(X, y, clf, digested.result, method = \"exact\")"},{"path":"https://predomics.github.io/predomicspkg/reference/bestModelStability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"analyse stability of models from digest — bestModelStability","text":"X: dataset classify y: variable predict clf: object containing different parameters classifier digested.result: digest result digest method: wether compute stability best compared best folds (exact), top best (fuzzy)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/bestModelStability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"analyse stability of models from digest — bestModelStability","text":"object first list feature presence tables k_sparsity list feature presence frequency","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/cir_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Cirhosis stage 2 (frequencies) — cir_test","title":"Cirhosis stage 2 (frequencies) — cir_test","text":"dataset consists frequency abundance files downloaded http://waldronlab.io/curatedMetagenomicData/ list containing two elements: () X data matrix 1045 species 56 observations (ii) patient class = -1 (n=25) healthy controls (n=31)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/cir_test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cirhosis stage 2 (frequencies) — cir_test","text":"Qin, Nan, Fengling Yang, Ang Li, Edi Prifti, Yanfei Chen, Li Shao, Jing Guo, et al “Alterations human gut microbiome liver cirrhosis.” Nature 513, . 7516 (July 23, 2014): 59–64.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/cir_train.html","id":null,"dir":"Reference","previous_headings":"","what":"Cirhosis stage 1 (frequencies) — cir_train","title":"Cirhosis stage 1 (frequencies) — cir_train","text":"dataset consists frequency abundance files downloaded http://waldronlab.io/curatedMetagenomicData/.  list containing two elements: () X data matrix 1045 species 181 observations (ii) patient class = -1 (n=98) healthy controls (n=83)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/cir_train.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cirhosis stage 1 (frequencies) — cir_train","text":"Qin, Nan, Fengling Yang, Ang Li, Edi Prifti, Yanfei Chen, Li Shao, Jing Guo, et al “Alterations human gut microbiome liver cirrhosis.” Nature 513, . 7516 (July 23, 2014): 59–64 _.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/cleanPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"cleanPopulation — cleanPopulation","title":"cleanPopulation — cleanPopulation","text":"Looks invalid predomics objects population removes .","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/cleanPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cleanPopulation — cleanPopulation","text":"","code":"cleanPopulation(pop, clf)"},{"path":"https://predomics.github.io/predomicspkg/reference/cleanPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cleanPopulation — cleanPopulation","text":"pop: population (list) predomics objects clf: classifier object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/cleanPopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cleanPopulation — cleanPopulation","text":"population predomics objects","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeCardEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"computeCardEnrichment — computeCardEnrichment","title":"computeCardEnrichment — computeCardEnrichment","text":"Computes statistic enrichment cardinality score two class vector","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeCardEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"computeCardEnrichment — computeCardEnrichment","text":"","code":"computeCardEnrichment(v.card.mat, y)"},{"path":"https://predomics.github.io/predomicspkg/reference/computeCardEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"computeCardEnrichment — computeCardEnrichment","text":"v.card.mat: dataframe cardinality feature (columns) group y vector (rows) y: vector containing class specification sample","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeCardEnrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"computeCardEnrichment — computeCardEnrichment","text":"data.frame statistics computed","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeCoeffSVMLin.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute other prediction scores such as precision, recall and f-score — computeCoeffSVMLin","title":"Compute other prediction scores such as precision, recall and f-score — computeCoeffSVMLin","text":"function computes prediction scores based confusion matrix accuracy, precision, recall f-score","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeCoeffSVMLin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute other prediction scores such as precision, recall and f-score — computeCoeffSVMLin","text":"","code":"computeCoeffSVMLin(X, y, clf = NULL, mod = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/computeCoeffSVMLin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute other prediction scores such as precision, recall and f-score — computeCoeffSVMLin","text":"X: dataset classify y: variable predict mod: predomics object updated clf: object containing different parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeCoeffSVMLin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute other prediction scores such as precision, recall and f-score — computeCoeffSVMLin","text":"model whose evaluation parameters updated list containing coefficients intercept mod set.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeConfusionMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates the confusion Matrix of the predicted class and the class to predict — computeConfusionMatrix","title":"Evaluates the confusion Matrix of the predicted class and the class to predict — computeConfusionMatrix","text":"function evaluates accuracy model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeConfusionMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates the confusion Matrix of the predicted class and the class to predict — computeConfusionMatrix","text":"","code":"computeConfusionMatrix(mod, X, y, clf)"},{"path":"https://predomics.github.io/predomicspkg/reference/computeConfusionMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates the confusion Matrix of the predicted class and the class to predict — computeConfusionMatrix","text":"mod: model object evaluated X: dataset classify y: variable predict clf: object containing different parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeConfusionMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates the confusion Matrix of the predicted class and the class to predict — computeConfusionMatrix","text":"confusion matrix","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeEffectSizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute effect sizes for features in binary classification/regression tasks — computeEffectSizes","title":"Compute effect sizes for features in binary classification/regression tasks — computeEffectSizes","text":"binary classification tasks, compute cliff's delta effect  sizes btw groups (1 vs. -1) + pvalues wilcoxon rank-sum tests;  regression tasks, compute spearman correlations (rho + pvalue) vs.  continuous y variable","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeEffectSizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute effect sizes for features in binary classification/regression tasks — computeEffectSizes","text":"","code":"computeEffectSizes(X, y, mode)"},{"path":"https://predomics.github.io/predomicspkg/reference/computeEffectSizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute effect sizes for features in binary classification/regression tasks — computeEffectSizes","text":"X X matrix (rows=features; columns=samples) y y vector sample class (-1,1 binary classification;  continuous variable regression) mode classification regression","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeEffectSizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute effect sizes for features in binary classification/regression tasks — computeEffectSizes","text":"data frame features, effect sizes (cliff's delta binary  classification; spearman rho regression), pvalues (wicoxon rank-sum  test binary classification task; spearman correlation regression)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeFeatureMetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes different metrics for a given distributions — computeFeatureMetrics","title":"Computes different metrics for a given distributions — computeFeatureMetrics","text":"function computes compute certain number metrics dataset variable  (rows, prevalence, quartile distribution, etc.)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeFeatureMetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes different metrics for a given distributions — computeFeatureMetrics","text":"","code":"computeFeatureMetrics(data)"},{"path":"https://predomics.github.io/predomicspkg/reference/computeFeatureMetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes different metrics for a given distributions — computeFeatureMetrics","text":"data: data frame containing data treated.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeFeatureMetrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes different metrics for a given distributions — computeFeatureMetrics","text":"data frame containing different metrics: variance_to_mean, signal_to_noise, variation_coefficient, efficiency quartile_dispertion","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeIntercept.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the best intercept for the model while minimizing error — computeIntercept","title":"Computes the best intercept for the model while minimizing error — computeIntercept","text":"Computes best intercept model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeIntercept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the best intercept for the model while minimizing error — computeIntercept","text":"","code":"computeIntercept(score, y, verbose = FALSE, sign = \"auto\", plot = FALSE)"},{"path":"https://predomics.github.io/predomicspkg/reference/computeIntercept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the best intercept for the model while minimizing error — computeIntercept","text":"score: ^y score model y: response vector verbose: print running information set TRUE sign: weather score greater smaller intercept (default:\"auto\") return.: TRUE, function return intercept well table used compute . plot: TRUE, score visialized (default:FALSE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/computeIntercept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the best intercept for the model while minimizing error — computeIntercept","text":"intercept, sign accuracy","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/counter.html","id":null,"dir":"Reference","previous_headings":"","what":"The counter for the experiment id (used in the clf builders) — counter","title":"The counter for the experiment id (used in the clf builders) — counter","text":"counter experiment id (used clf builders)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The counter for the experiment id (used in the clf builders) — counter","text":"","code":"counter()"},{"path":"https://predomics.github.io/predomicspkg/reference/crossing.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates new combinations of features based from a parents. — crossing","title":"Creates new combinations of features based from a parents. — crossing","text":"function used terga1 create new combinations features based existing ones parents.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/crossing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates new combinations of features based from a parents. — crossing","text":"","code":"crossing(clf, pop, parents, seed = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/crossing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates new combinations of features based from a parents. — crossing","text":"clf: classifier parameter object pop: population (.e. list) index vectors parents: Indexes population pointing subset population containing parents (whose genes/features) used create children. seed: reproductibility purpose fix random generator number.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/crossing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates new combinations of features based from a parents. — crossing","text":"population models, containing parents children","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/denseVecToModel.html","id":null,"dir":"Reference","previous_headings":"","what":"denseVecToModel — denseVecToModel","title":"denseVecToModel — denseVecToModel","text":"Builds model object based model dense (long) format.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/denseVecToModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"denseVecToModel — denseVecToModel","text":"","code":"denseVecToModel(X, y, v, clf, eval.all = FALSE, obj = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/denseVecToModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"denseVecToModel — denseVecToModel","text":"X: dataset y: labels v: vector coeffs (example v=c(0.0,1.0,0.0,-1.0)) clf: classifier information eval.: TRUE fitting function intercept computed obj: object model add model (default:NULL)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/denseVecToModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"denseVecToModel — denseVecToModel","text":"model object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/digest.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the results from an experiment object — digest","title":"Summarize the results from an experiment object — digest","text":"Sumarizes results experiment object type  `obj$classifier` `obj$crossval`. different digestMC(), sumarizes model collection obj$models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/digest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the results from an experiment object — digest","text":"","code":"digest(   obj,   penalty = NULL,   best.cv = TRUE,   best.k = NULL,   plot = FALSE,   omit.na = TRUE )"},{"path":"https://predomics.github.io/predomicspkg/reference/digest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the results from an experiment object — digest","text":"obj: experiment object resulting learning process `fit()` penalty: coefficient 0 1, applied penalize  performance models consequence model-size. use select best model population models (default:NULL) best.cv: chose best model based information learnerd  cross validation (default:TRUE). work crossvalidation data  available. best model selected empirical results. best.k: wish let algorithm select model size,  can fix setting best.k integer indicating number  variables model (default:NULL). plot: digested results plotted ? (default:FALSE) omit.na: Omit data empty results (default:TRUE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/digest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the results from an experiment object — digest","text":"object digested information best models  model-size, respective scores, best model.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/digestModelCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"digestModelCollection — digestModelCollection","title":"digestModelCollection — digestModelCollection","text":"Sumarizes results model collection object type clf_res$models. different digest() sumarizes experiment clf_res$classifier$models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/digestModelCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"digestModelCollection — digestModelCollection","text":"","code":"digestModelCollection(obj, X = NULL, clf, k.penalty = 0, mmprev = FALSE)"},{"path":"https://predomics.github.io/predomicspkg/reference/digestModelCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"digestModelCollection — digestModelCollection","text":"obj: modelCollection object X: dataset (default = NULL) clf: classifier object k.penalty: penalty apply sparsity (default:0). mmprev: activate max.min.prevalence selector (default:FALSE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/digestModelCollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"digestModelCollection — digestModelCollection","text":"object sumarized results best models k_sparse, respective scores, best model, etc","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/digestModelCollection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"digestModelCollection — digestModelCollection","text":"Summarize results given modelCollection object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/disectModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyzes the score construction and model — disectModel","title":"Analyzes the score construction and model — disectModel","text":"Analyzes score construction model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/disectModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyzes the score construction and model — disectModel","text":"","code":"disectModel(mod, X, y, clf, plot = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/disectModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyzes the score construction and model — disectModel","text":"mod: model object score computed X: data matrix variables rows observations columns y: class vector clf: object containing different parameters classifier plot: plot graphical interpretation TRUE, (default:TRUE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/disectModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyzes the score construction and model — disectModel","text":"object containing statistics given model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/estimateFeatureImportance.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates the importance of each feature in the model object — estimateFeatureImportance","title":"Estimates the importance of each feature in the model object — estimateFeatureImportance","text":"Estimates importance feature model object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/estimateFeatureImportance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates the importance of each feature in the model object — estimateFeatureImportance","text":"","code":"estimateFeatureImportance(   mod,   X,   y,   clf,   attribute = \"unpenalized_fit_\",   plot.importance = FALSE )"},{"path":"https://predomics.github.io/predomicspkg/reference/estimateFeatureImportance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates the importance of each feature in the model object — estimateFeatureImportance","text":"mod: model object X: data matrix variables rows observations columns y: response vector clf: classifier parameter object attribute: attribute used compute importance (default:unpenalized_fit_) plot.importance: function plot improtance features (default:FALSE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/estimateFeatureImportance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates the importance of each feature in the model object — estimateFeatureImportance","text":"model object importance feature computed. Negative importance feature means feature beneficial.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the AUC of a model — evaluateAUC","title":"Computes the AUC of a model — evaluateAUC","text":"Computes AUC model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the AUC of a model — evaluateAUC","text":"","code":"evaluateAUC(score, y, sign = \">\")"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the AUC of a model — evaluateAUC","text":"score: ^y score model y: response vector sign: direction make comparison? \"auto\" (default): automatically define group  median higher take direction accordingly. \">\": predictor values control group  higher values case group (controls > t >= cases). \"<\": predictor values  control group lower equal values case group (controls < t <= cases).","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAUC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the AUC of a model — evaluateAUC","text":"auc value","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAccuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates the accuracy of a model — evaluateAccuracy","title":"Evaluates the accuracy of a model — evaluateAccuracy","text":"function evaluates accuracy either (1) model object contains intercept sign (2) directly attributes score, intercept, sign","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAccuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates the accuracy of a model — evaluateAccuracy","text":"","code":"evaluateAccuracy(   mod = NULL,   X,   y,   clf,   force.re.evaluation = FALSE,   mode = \"train\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAccuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates the accuracy of a model — evaluateAccuracy","text":"mod: model object used class prediction X: dataset classify y: variable predict clf: object containing different parameters classifier force.re.evaluation: evaluate elements needed accuracy (default:FALSE) mode: training test mode. training, funciton maximizes accuracy.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAccuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates the accuracy of a model — evaluateAccuracy","text":"either (1) model whose evaluation parameters updated (2) accuracy","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAdditionnalMetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute other prediction scores such as precision, recall and f-score — evaluateAdditionnalMetrics","title":"Compute other prediction scores such as precision, recall and f-score — evaluateAdditionnalMetrics","text":"function computes prediction scores based confusion matrix accuracy, precision, recall f-score","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAdditionnalMetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute other prediction scores such as precision, recall and f-score — evaluateAdditionnalMetrics","text":"","code":"evaluateAdditionnalMetrics(mod, X, y, clf, mode = \"train\")"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAdditionnalMetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute other prediction scores such as precision, recall and f-score — evaluateAdditionnalMetrics","text":"mod: model object evaluated X: dataset classify y: variable predict clf: object containing different parameters classifier mode: training testing mode","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateAdditionnalMetrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute other prediction scores such as precision, recall and f-score — evaluateAdditionnalMetrics","text":"model whose evaluation parameters updated","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateFeatureImportanceInPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"evaluates the feature importance in a population of models — evaluateFeatureImportanceInPopulation","title":"evaluates the feature importance in a population of models — evaluateFeatureImportanceInPopulation","text":"function perturbes dataset shuffling one time subset features appear population models recomputes evaluation models. mean deltas score consider give measure importance. Two methods  implemented: first (extensive), shuffle feature feature multiple times compute evaluation whole  population models, can time consuming. second (optimized) default approach consists using different  seed shuffling given feature computing population. setting needed run multiple seeds whole  dataset. procedure designed applied cross validation.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateFeatureImportanceInPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"evaluates the feature importance in a population of models — evaluateFeatureImportanceInPopulation","text":"","code":"evaluateFeatureImportanceInPopulation(   pop,   X,   y,   clf,   score = \"fit_\",   filter.ci = TRUE,   method = \"optimized\",   seed = c(1:10),   aggregation = \"mean\",   verbose = TRUE )"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateFeatureImportanceInPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"evaluates the feature importance in a population of models — evaluateFeatureImportanceInPopulation","text":"pop: population models considered. population filtered filter.ci = TRUE (default) using interval  confidence computed around best model using binomial distribution. X: dataset used classify y: variable predict clf: object containing different parameters classifier score: attribute model considered evaluation (default:fit_) filter.ci: filter population based best model confidence interval (default:TRUE) method: Two methods implemented: first (extensive), shuffle feature feature multiple times compute  evaluation whole population models, can time consuming. second (optimized) default approach consists  using different seed shuffling given feature computing population. seed: one seeds used extensive method shuffling (default:c(1:10). optimized method first seed used  rest seeds needed model incremented . aggregation: method used aggregate evaluation whole population (default: mean), can either mean median. verbose: wether print information execution process.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateFeatureImportanceInPopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"evaluates the feature importance in a population of models — evaluateFeatureImportanceInPopulation","text":"data.frame features rows population mean/median score model*seed population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates the fitting score of a model object — evaluateFit","title":"Evaluates the fitting score of a model object — evaluateFit","text":"Evaluates fitting score model object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates the fitting score of a model object — evaluateFit","text":"","code":"evaluateFit(mod, X, y, clf, force.re.evaluation = FALSE, mode = \"train\")"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates the fitting score of a model object — evaluateFit","text":"mod : model object X: data matrix variables rows observations columns y: response vector clf: classifier parameter object force.re.evaluation: re-evaluate scores even exist (default:FALSE) mode: choice c(\"train\", \"test\") indicates wether wish learn threthold  model (default:\"train\") \"test\" c(\"terinter\",\"bininter\",\"ratio\") languages","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates the fitting score of a model object — evaluateFit","text":"model object fitting score","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateIntercept.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates the fitting score of a model object — evaluateIntercept","title":"Evaluates the fitting score of a model object — evaluateIntercept","text":"Evaluates fitting score model object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateIntercept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates the fitting score of a model object — evaluateIntercept","text":"","code":"evaluateIntercept(mod, X, y, clf)"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateIntercept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates the fitting score of a model object — evaluateIntercept","text":"mod : model object X: data matrix variables rows observations columns y: response vector clf: classifier parameter object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateIntercept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates the fitting score of a model object — evaluateIntercept","text":"model object fitting score","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates the fitting score of a model object — evaluateModel","title":"Evaluates the fitting score of a model object — evaluateModel","text":"Evaluates fitting score model object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates the fitting score of a model object — evaluateModel","text":"","code":"evaluateModel(   mod,   X,   y,   clf,   eval.all = FALSE,   force.re.evaluation = FALSE,   estim.feat.importance = FALSE,   mode = \"train\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates the fitting score of a model object — evaluateModel","text":"mod: model object X: data matrix variables rows observations columns y: response vector clf: classifier parameter object eval.: function evaluate scores (default:FALSE) force.re.evaluation: re-evaluate scores even exist (default:FALSE) estim.feat.importance: evaluate importance model object (default:FALSE) mode: choice c(\"train\", \"test\") indicates wether wish learn threthold  model (default:\"train\") \"test\" c(\"terinter\",\"bininter\",\"ratio\") languages","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates the fitting score of a model object — evaluateModel","text":"model object fitting scores evaluated","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateModelRegression.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates the fitting coefficents of a model object — evaluateModelRegression","title":"Evaluates the fitting coefficents of a model object — evaluateModelRegression","text":"Evaluates fitting coefficients model object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateModelRegression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates the fitting coefficents of a model object — evaluateModelRegression","text":"","code":"evaluateModelRegression(   mod,   X,   y,   clf,   eval.all = FALSE,   force.re.evaluation = FALSE )"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateModelRegression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates the fitting coefficents of a model object — evaluateModelRegression","text":"mod: model object X: data matrix variables rows observations columns y: response vector clf: classifier parameter object eval.: function evaluate scores (default:FALSE) force.re.evaluation: re-evaluate scores even exist (default:FALSE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateModelRegression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates the fitting coefficents of a model object — evaluateModelRegression","text":"model object fitting scores evaluated","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluatePopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"evaluatePopulation — evaluatePopulation","title":"evaluatePopulation — evaluatePopulation","text":"Evaluates entire population models, predomics objects individuals","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluatePopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"evaluatePopulation — evaluatePopulation","text":"","code":"evaluatePopulation(   X,   y,   clf,   pop,   eval.all = FALSE,   force.re.evaluation = FALSE,   estim.feat.importance = FALSE,   mode = \"train\",   delete.null.models = TRUE,   lfolds = NULL )"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluatePopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"evaluatePopulation — evaluatePopulation","text":"X: data matrix variables rows observations columns y: class vector clf: object containing classifier information pop: population models evaluated eval.: function evaluate scores models (default:FALSE) force.re.evaluation: re-evaluate scores even exist models (default:FALSE) estim.feat.importance: evaluate importance model object models (default:FALSE) mode: choice c(\"train\", \"test\") indicates wether wish learn threthold  models (default:\"train\") \"test\" c(\"terinter\",\"bininter\",\"ratio\") languages delete.null.models: null indivuals deleted (default:TRUE) lfolds: compute evaluation crossval (default:NULL)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluatePopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"evaluatePopulation — evaluatePopulation","text":"individual object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluatePrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the prevalence of a given model — evaluatePrevalence","title":"Evaluate the prevalence of a given model — evaluatePrevalence","text":"Evaluate prevalence given model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluatePrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the prevalence of a given model — evaluatePrevalence","text":"","code":"evaluatePrevalence(mod, X)"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluatePrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the prevalence of a given model — evaluatePrevalence","text":"mod: model object X: dataset compute prevalence","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluatePrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the prevalence of a given model — evaluatePrevalence","text":"vector containing prevalence feature","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateYhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the predected classification using a given model — evaluateYhat","title":"Computes the predected classification using a given model — evaluateYhat","text":"function evaluates predicted classification either using (1) model object contains intercept sign (2) directly attributes score, intercept, sign","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateYhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the predected classification using a given model — evaluateYhat","text":"","code":"evaluateYhat(   mod = NULL,   X,   y,   clf,   score = NULL,   intercept = NULL,   sign = NULL )"},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateYhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the predected classification using a given model — evaluateYhat","text":"mod: model object used class prediction X: dataset classify y: variable predict clf: object containing different parameters classifier score: score passed directly intercept: intercept passed directly sign: sign passed directly","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evaluateYhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the predected classification using a given model — evaluateYhat","text":"vector predicted classification samples","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates new combinations of features based from a parents. — evolve","title":"Creates new combinations of features based from a parents. — evolve","text":"function used terga1 main engine algorithm allows cross, mutate select individuals one generation next.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates new combinations of features based from a parents. — evolve","text":"","code":"evolve(X, y, clf, pop, seed = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/evolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates new combinations of features based from a parents. — evolve","text":"X: data matrix variables rows observations columns y: response vector clf: classifier parameter object pop: population (.e. list) index vectors seed: reproductibility purpose fix random generator number.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates new combinations of features based from a parents. — evolve","text":"population models, containing parents children","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evolve2m.html","id":null,"dir":"Reference","previous_headings":"","what":"Second version of the evolve method — evolve2m","title":"Second version of the evolve method — evolve2m","text":"evolve method realize selection parents  two methods (moment) : elite random. tags every selected  individual index mate population. individual  sould mutated tagged. individual population  check need crossed /mutated apply operations  create new individual operation applied.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evolve2m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second version of the evolve method — evolve2m","text":"","code":"evolve2m(X, y, clf, pop, featEval, generation)"},{"path":"https://predomics.github.io/predomicspkg/reference/evolve2m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second version of the evolve method — evolve2m","text":"X: Dataset classify y: Variable predict clf: claffifier  object containing different parameters pop: population evolved featEval: dataframe evaluation variable dataset,  used mutator.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evolve2m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second version of the evolve method — evolve2m","text":"list size_pop bests combination old population  new population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evolve3m.html","id":null,"dir":"Reference","previous_headings":"","what":"Another version of the evolve method that distingishes the different lanugages — evolve3m","title":"Another version of the evolve method that distingishes the different lanugages — evolve3m","text":"nutshell evolve method select parents using 2 methods (elite random). tags every selected individual index mate population.  individuals randomly selected tagged mutated. individual  population check need crossed /mutated apply operations  create new individual operation applied. two parents different languages algorithm  produce two children one languages. pipeline paralellized efficiency. summarize following way :  -> Evaluation -> initialisation tags -> Tagging -> Crossing mutation -> (newpop)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evolve3m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Another version of the evolve method that distingishes the different lanugages — evolve3m","text":"","code":"evolve3m(X, y, clf, pop, featEval)"},{"path":"https://predomics.github.io/predomicspkg/reference/evolve3m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Another version of the evolve method that distingishes the different lanugages — evolve3m","text":"X: dataset classify y: variable predict clf: object containing different parameters classifier pop: population evolved featEval: dataset evaluation variable dataset, used mutator.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/evolve3m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Another version of the evolve method that distingishes the different lanugages — evolve3m","text":"list every new individuals","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/filterFeaturesByPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects the most prevalent features in the dataset baset on the provided thresholds. — filterFeaturesByPrevalence","title":"Selects the most prevalent features in the dataset baset on the provided thresholds. — filterFeaturesByPrevalence","text":"Filters features display prevalence given threshold provided number  observations percentage. total dataset class.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/filterFeaturesByPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects the most prevalent features in the dataset baset on the provided thresholds. — filterFeaturesByPrevalence","text":"","code":"filterFeaturesByPrevalence(   X,   y = NULL,   nb.prevalence = NULL,   perc.prevalence = NULL,   by.class = TRUE )"},{"path":"https://predomics.github.io/predomicspkg/reference/filterFeaturesByPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects the most prevalent features in the dataset baset on the provided thresholds. — filterFeaturesByPrevalence","text":"X: dataset X y: class vector (default:NULL) nb.prevalence: minimum number non zero observations (default: 10) perc.prevalence: percentage non zero observations (default: NULL) .class: wether filter applied class (default: TRUE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/filterFeaturesByPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects the most prevalent features in the dataset baset on the provided thresholds. — filterFeaturesByPrevalence","text":"filtered dataset, without features pass filter.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/filterNoSignal.html","id":null,"dir":"Reference","previous_headings":"","what":"filterNoSignal: Omits the variables with no information — filterNoSignal","title":"filterNoSignal: Omits the variables with no information — filterNoSignal","text":"function clean dataset variables little information.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/filterNoSignal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filterNoSignal: Omits the variables with no information — filterNoSignal","text":"","code":"filterNoSignal(X, side = 1, threshold = \"auto\", verbose = FALSE)"},{"path":"https://predomics.github.io/predomicspkg/reference/filterNoSignal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filterNoSignal: Omits the variables with no information — filterNoSignal","text":"X: dataset clean side: side=1 means variables rows. 1 transpose dataset threshold: auto, compute first derivate median(sd)/x find automatic threshold. threshold numerical used threshold something else, automatically 0. verbose: print information TRUE (default:FALSE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/filterfeaturesK.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects a the top k features that are significantly associated with the class to predict — filterfeaturesK","title":"Selects a the top k features that are significantly associated with the class to predict — filterfeaturesK","text":"Runs statistics data selects subset k features significant.  Besides filtering function can used larger statistical context.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/filterfeaturesK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects a the top k features that are significantly associated with the class to predict — filterfeaturesK","text":"","code":"filterfeaturesK(   data,   trait,   k = 10,   type = \"wilcoxon\",   restrict = rep(TRUE, ncol(data)),   multiple.adjust = \"BH\",   paired = FALSE,   sort = TRUE,   verbose = FALSE,   verbose.step = NULL,   return.data = FALSE )"},{"path":"https://predomics.github.io/predomicspkg/reference/filterfeaturesK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects a the top k features that are significantly associated with the class to predict — filterfeaturesK","text":"data: dataset X trait: equivalent y (class, numerical) k: number features (default:10) type: statistics run (default:wilcoxon) restrict: Run statistics subset dataset (default: vector TRUE) multiple.adjust: multiple testing adjustment method (default:BH) paired: wether paired statistics run (default:FALSE) sort: return variables sorted p-value significance (default:TRUE) verbose: print information indicating progress (default:FALSE) verbose.step: Showing 1 percent progress. return.data: (default:FALSE) returns statistics X, otherwise restricted data subset","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/findk.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the number of weights not yet integer. — findk","title":"Find the number of weights not yet integer. — findk","text":"method return maximum number weights model yet integer.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/findk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the number of weights not yet integer. — findk","text":"","code":"findk(   x,   y,   nfolds = 1,   gamma = 1,   k.sparse = NULL,   vartype = \"real\",   lb = -1,   ub = 1 )"},{"path":"https://predomics.github.io/predomicspkg/reference/findk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the number of weights not yet integer. — findk","text":"x matrix dataframe predictors, dimension n*p; row observation vector. y response variable (1 -1) nfolds k-folds cross-validation want test. Dedault value 1. gamma hinge loss parameter.. Defines margin k.sparse sparsity (non-negative real value). Default value k.sparse = NULL - constraint. vartype type coefficients : cplexAPI::CPX_INTEGER, cplexAPI::CPX_BINARY, cplexAPI::CPX_CONTINUOUS. Default vartype = cplexAPI::CPX_INTEGER lb lower bound coefficients ub upper bound coefficients","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/findk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the number of weights not yet integer. — findk","text":"integer number coefficients yet integer.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/fit.html","id":null,"dir":"Reference","previous_headings":"","what":"fit: runs the classifier on a dataset — fit","title":"fit: runs the classifier on a dataset — fit","text":"function runs learning experiment based classifier object given dataset.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit: runs the classifier on a dataset — fit","text":"","code":"fit(   X,   y,   clf,   cross.validate = FALSE,   lfolds = NULL,   nfolds = 10,   parallelize.folds = TRUE,   compute.importance = TRUE,   return.all = FALSE,   log.file = \"parallel.log\",   path = NULL )"},{"path":"https://predomics.github.io/predomicspkg/reference/fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit: runs the classifier on a dataset — fit","text":"X: Dataset classify y: Variable predict clf: classifier object object containing settings classifier cross.validate: Whether classification run cross-validation mode (default:TRUE) lfolds: folds used cross-validation nfolds: number folds use cross-validation. lfolds specified option allows set (default:10) parallelize.folds: Switch setting parallelization mode based cross-validation folds nothing else algorithm (default:TRUE). much efficient. compute.importance: importance variables learning process cross-validation can computed. based data perturbation similar mean decrease accuracy random forest algorithm. Moreover, gives feature prevalence models CV (default:TRUE) return.: results cross-validation steps returned. usually needed testing stability models (default:FALSE) log.file: output file parallel logs (default:'parallel.log') path: path save temporary data","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit: runs the classifier on a dataset — fit","text":"experiment object containing classifier along classification results sub-element","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/generateAllCombinations.html","id":null,"dir":"Reference","previous_headings":"","what":"generateAllCombinations — generateAllCombinations","title":"generateAllCombinations — generateAllCombinations","text":"Generate every possible combination list features evaluate ","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/generateAllCombinations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateAllCombinations — generateAllCombinations","text":"","code":"generateAllCombinations(X, y, clf, ind.features.to.keep, sparsity, allFeatures)"},{"path":"https://predomics.github.io/predomicspkg/reference/generator_metal.html","id":null,"dir":"Reference","previous_headings":"","what":"#' Computes best model of a metal clf\n#'\n#' @description Get best metal model\n#' @param X: dataset to classify\n#' @param y: variable to predict\n#' @param clf: an object containing the different parameters of the classifier\n#' @param clf_res: the result of metal\n#' @param k_penalty: penalty for k\n#' @return A list of result of best model for each k, their importance feature of each best model, individuels wrongly classified\n#' @export\ngetTheBestMetalModel<- function(clf, clf_res, X, k_penalty=0.01, evalToOrder=","title":"#' Computes best model of a metal clf\n#'\n#' @description Get best metal model\n#' @param X: dataset to classify\n#' @param y: variable to predict\n#' @param clf: an object containing the different parameters of the classifier\n#' @param clf_res: the result of metal\n#' @param k_penalty: penalty for k\n#' @return A list of result of best model for each k, their importance feature of each best model, individuels wrongly classified\n#' @export\ngetTheBestMetalModel<- function(clf, clf_res, X, k_penalty=0.01, evalToOrder=","text":"Generate metal list clfs containing information generators unificators","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/generator_metal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"#' Computes best model of a metal clf\n#'\n#' @description Get best metal model\n#' @param X: dataset to classify\n#' @param y: variable to predict\n#' @param clf: an object containing the different parameters of the classifier\n#' @param clf_res: the result of metal\n#' @param k_penalty: penalty for k\n#' @return A list of result of best model for each k, their importance feature of each best model, individuels wrongly classified\n#' @export\ngetTheBestMetalModel<- function(clf, clf_res, X, k_penalty=0.01, evalToOrder=","text":"","code":"generator_metal(mat, clf = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/generator_metal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"#' Computes best model of a metal clf\n#'\n#' @description Get best metal model\n#' @param X: dataset to classify\n#' @param y: variable to predict\n#' @param clf: an object containing the different parameters of the classifier\n#' @param clf_res: the result of metal\n#' @param k_penalty: penalty for k\n#' @return A list of result of best model for each k, their importance feature of each best model, individuels wrongly classified\n#' @export\ngetTheBestMetalModel<- function(clf, clf_res, X, k_penalty=0.01, evalToOrder=","text":"mat: language/learner presence matrix indicates algorithms languages explore clf: metal classifier object, parameter list.clfs can \"NULL\"","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/generator_metal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"#' Computes best model of a metal clf\n#'\n#' @description Get best metal model\n#' @param X: dataset to classify\n#' @param y: variable to predict\n#' @param clf: an object containing the different parameters of the classifier\n#' @param clf_res: the result of metal\n#' @param k_penalty: penalty for k\n#' @return A list of result of best model for each k, their importance feature of each best model, individuels wrongly classified\n#' @export\ngetTheBestMetalModel<- function(clf, clf_res, X, k_penalty=0.01, evalToOrder=","text":"list clfs","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFeaturePrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates the prevalence of a list of features in the whole dataset and per each class — getFeaturePrevalence","title":"Evaluates the prevalence of a list of features in the whole dataset and per each class — getFeaturePrevalence","text":"Evaluate prevalence given model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFeaturePrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates the prevalence of a list of features in the whole dataset and per each class — getFeaturePrevalence","text":"","code":"getFeaturePrevalence(features, X, y = NULL, prop = TRUE, zero.value = 0)"},{"path":"https://predomics.github.io/predomicspkg/reference/getFeaturePrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates the prevalence of a list of features in the whole dataset and per each class — getFeaturePrevalence","text":"features: list features features indexes wish compute prevalence X: dataset compute prevalence y: provided also compute hte prevalence per class (default:NULL) prop: weather compute prevalence number proportion (default:TRUE) zero.value: value specifies zero. can different 0 log transformed data instance (default = 0)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFeaturePrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates the prevalence of a list of features in the whole dataset and per each class — getFeaturePrevalence","text":"list containing prevalence whole dataset well classes (provided)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitIndividual.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the fitting score of an individual object — getFitIndividual","title":"Get the fitting score of an individual object — getFitIndividual","text":"Get fitting score individual object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitIndividual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the fitting score of an individual object — getFitIndividual","text":"","code":"getFitIndividual(individual)"},{"path":"https://predomics.github.io/predomicspkg/reference/getFitIndividual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the fitting score of an individual object — getFitIndividual","text":"individual : individual object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitIndividual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the fitting score of an individual object — getFitIndividual","text":"fitting score","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the fitting score of a model object — getFitModel","title":"Get the fitting score of a model object — getFitModel","text":"Get fitting score model object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the fitting score of a model object — getFitModel","text":"","code":"getFitModel(mod)"},{"path":"https://predomics.github.io/predomicspkg/reference/getFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the fitting score of a model object — getFitModel","text":"mod : model object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the fitting score of a model object — getFitModel","text":"fitting score","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the fitting score of a list a models — getFitModels","title":"Get the fitting score of a list a models — getFitModels","text":"Get fitting score list models.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the fitting score of a list a models — getFitModels","text":"","code":"getFitModels(pop)"},{"path":"https://predomics.github.io/predomicspkg/reference/getFitModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the fitting score of a list a models — getFitModels","text":"pop : list models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the fitting score of a list a models — getFitModels","text":"vector fitting scores","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the fitting score of a list of individuals — getFitPopulation","title":"Get the fitting score of a list of individuals — getFitPopulation","text":"Get fitting score list individuals.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the fitting score of a list of individuals — getFitPopulation","text":"","code":"getFitPopulation(pop)"},{"path":"https://predomics.github.io/predomicspkg/reference/getFitPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the fitting score of a list of individuals — getFitPopulation","text":"pop : list individuals","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getFitPopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the fitting score of a list of individuals — getFitPopulation","text":"vector fitting scores","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"getGraph — getGraph","title":"getGraph — getGraph","text":"function gets graph result analyseStableModels","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getGraph — getGraph","text":"","code":"getGraph(mat, X, threshold = 0)"},{"path":"https://predomics.github.io/predomicspkg/reference/getGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getGraph — getGraph","text":"X: dataset classify mat: AnalyseStableModels()$origin threshold:","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getGraph — getGraph","text":"graph","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getImportanceFeaturesFBMobjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get objects needed for a merged visualization task combining different \nexperiments from different datasets (different X and y) — getImportanceFeaturesFBMobjects","title":"Get objects needed for a merged visualization task combining different \nexperiments from different datasets (different X and y) — getImportanceFeaturesFBMobjects","text":"get 4 datasets given prediction experiment  (clf object + X + y) needed subsequent combination  predition experiments combined visualization (feature prevalence  FBM + feature importance + featureEffSizes + feature prevalence groups)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getImportanceFeaturesFBMobjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get objects needed for a merged visualization task combining different \nexperiments from different datasets (different X and y) — getImportanceFeaturesFBMobjects","text":"","code":"getImportanceFeaturesFBMobjects(   clf_res,   X,   y,   verbose = TRUE,   filter.cv.prev = 0.25,   scaled.importance = FALSE,   k_penalty = 0.75/100,   k_max = 0 )"},{"path":"https://predomics.github.io/predomicspkg/reference/getImportanceFeaturesFBMobjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get objects needed for a merged visualization task combining different \nexperiments from different datasets (different X and y) — getImportanceFeaturesFBMobjects","text":"clf_res result single experiment X feature table used input fit function behind experiments  clf_res y target class (binary/continuous) verbose print informaiton filter.cv.prev keep features found least (default: 0.25,  .e 25 percent) cross validation experiments scaled.importance scaled importance importance multipied  prevalence folds. (default = TRUE) used,  mean mda scaled prevalence feature folds  ordered subsequently k_penalty sparsity penalty needed select best models  population (default:0.75/100). k_max select best population given threshold. (default:0)  selection performed.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getImportanceFeaturesFBMobjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get objects needed for a merged visualization task combining different \nexperiments from different datasets (different X and y) — getImportanceFeaturesFBMobjects","text":"list objects subsequent combination","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getIndicesIndividual.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the index of the features in a given individual — getIndicesIndividual","title":"Get the index of the features in a given individual — getIndicesIndividual","text":"Get indices features used individuals","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getIndicesIndividual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the index of the features in a given individual — getIndicesIndividual","text":"","code":"getIndicesIndividual(individual)"},{"path":"https://predomics.github.io/predomicspkg/reference/getIndicesIndividual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the index of the features in a given individual — getIndicesIndividual","text":"individual : individual object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getIndicesIndividual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the index of the features in a given individual — getIndicesIndividual","text":"indices features","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getIndicesPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the indices of the features used in a population of individuals — getIndicesPopulation","title":"Get the indices of the features used in a population of individuals — getIndicesPopulation","text":"Get indices features used population individuals","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getIndicesPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the indices of the features used in a population of individuals — getIndicesPopulation","text":"","code":"getIndicesPopulation(pop)"},{"path":"https://predomics.github.io/predomicspkg/reference/getIndicesPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the indices of the features used in a population of individuals — getIndicesPopulation","text":"pop : list individuals","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getIndicesPopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the indices of the features used in a population of individuals — getIndicesPopulation","text":"matrix indices (rows), individuals (cols)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getMaxMinPrevalenceModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the model that has the highest minimal prevalence in its features — getMaxMinPrevalenceModel","title":"Get the model that has the highest minimal prevalence in its features — getMaxMinPrevalenceModel","text":"Get model highest minimal prevalence features","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getMaxMinPrevalenceModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the model that has the highest minimal prevalence in its features — getMaxMinPrevalenceModel","text":"","code":"getMaxMinPrevalenceModel(pop, X = NULL, evalToOrder = \"fit_\", selected = 0)"},{"path":"https://predomics.github.io/predomicspkg/reference/getMaxMinPrevalenceModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the model that has the highest minimal prevalence in its features — getMaxMinPrevalenceModel","text":"pop: population model objects X: dataset compute prevalence evalToOrder: score use order models select (default:fit_) selected: number selected models (default:0). 0, everything returned.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getMaxMinPrevalenceModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the model that has the highest minimal prevalence in its features — getMaxMinPrevalenceModel","text":"model list model objects","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getModelScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the ^y score of the model — getModelScore","title":"Computes the ^y score of the model — getModelScore","text":"Returns ^y score model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getModelScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the ^y score of the model — getModelScore","text":"","code":"getModelScore(mod, X, clf, force.re.evaluation = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/getModelScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the ^y score of the model — getModelScore","text":"mod: model object score computed X: data matrix variables rows observations columns force.re.evaluation: recompute score (default:TRUE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getModelScore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the ^y score of the model — getModelScore","text":"vector containing predicted ^y score observation","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getNBestModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the models from a classifier result for each k-sparsity — getNBestModels","title":"Get the models from a classifier result for each k-sparsity — getNBestModels","text":"Get N best models classifier result k-sparsity.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getNBestModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the models from a classifier result for each k-sparsity — getNBestModels","text":"","code":"getNBestModels(   obj,   significance = FALSE,   by.k.sparsity = TRUE,   k.penalty = 0,   n.best = 5,   single.best = FALSE,   single.best.cv = TRUE,   single.best.k = NULL,   max.min.prevalence = FALSE,   X = NULL,   verbose = FALSE,   evalToOrder = \"fit_\",   return.population = FALSE,   unique.control = TRUE )"},{"path":"https://predomics.github.io/predomicspkg/reference/getNBestModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the models from a classifier result for each k-sparsity — getNBestModels","text":"obj: classifier result output function fit. can also ModelCollection Population object significance: TRUE, (default:FALSE) statistical test applied find lowest threshold delimit window best models. FALSE, models selected according rest criteria. .k.sparsity: TRUE (default:TRUE), filtering performed sparsity level k.penalty: (default:0), penalize models large sparsity different, .k.sparsity set TRUE n.best: number best models returned sparsity .k.sparsity set TRUE whole population  otherwise (default:5). nbest: number best models wish get population, per sparsity . less best models number, less returned single.best: TRUE, return best model (default:FALSE) n.best set 1. single.best.cv: single.best TRUE, chose best model based data cross validation (default:TRUE)  case obj experiment empirical results CV. single.best.k: single.best TRUE, chose best model given sparsity specified number .  value specified (default:NULL), de-actvate single.best.cv. max.min.prevalence: TRUE (default:FALSE), best models selected based performance also prevalence  features compose . X: dataset learned (default:NULL). neeeded max.min.prevalence set TRUE. verbose: provide information execution (default = FALSE) evalToOrder: attribute model object use order models select (default:fit_) return.population: set TRUE (default:FALSE), result send population models unique.control: set TRUE (default:TRUZ), correct population dupplication models takes place","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getNBestModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the models from a classifier result for each k-sparsity — getNBestModels","text":"list model objects model single one model collection","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getSign.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates the sign for a given feature this is the old getMgsVsTraitSignDiscr function — getSign","title":"Evaluates the sign for a given feature this is the old getMgsVsTraitSignDiscr function — getSign","text":"Evaluates sign given feature old getMgsVsTraitSignDiscr function.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getSign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates the sign for a given feature this is the old getMgsVsTraitSignDiscr function — getSign","text":"","code":"getSign(X, y, clf = NULL, parallel.local = FALSE)"},{"path":"https://predomics.github.io/predomicspkg/reference/getSign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates the sign for a given feature this is the old getMgsVsTraitSignDiscr function — getSign","text":"X: data matrix variables rows observations columns y: response vector clf: classifier parameter object parallel.local: weather run //","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/getSign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates the sign for a given feature this is the old getMgsVsTraitSignDiscr function — getSign","text":"vector +1 & -1 variable","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/get_IndividualToBeMutated.html","id":null,"dir":"Reference","previous_headings":"","what":"Return list of individuals to mutate — get_IndividualToBeMutated","title":"Return list of individuals to mutate — get_IndividualToBeMutated","text":"Wraper function returns list individuals going go  mutate function (normaly taged tag_SelectRandom)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/get_IndividualToBeMutated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return list of individuals to mutate — get_IndividualToBeMutated","text":"","code":"get_IndividualToBeMutated(pop)"},{"path":"https://predomics.github.io/predomicspkg/reference/get_IndividualToBeMutated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return list of individuals to mutate — get_IndividualToBeMutated","text":"pop: population list","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/get_IndividualToBeMutated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return list of individuals to mutate — get_IndividualToBeMutated","text":"list individuals (= population) containing individuals selected mutation","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/get_Parents.html","id":null,"dir":"Reference","previous_headings":"","what":"Return list of parents — get_Parents","title":"Return list of parents — get_Parents","text":"Wraper function returns list parents (normaly taged  tag_SelectRandom)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/get_Parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return list of parents — get_Parents","text":"","code":"get_Parents(pop)"},{"path":"https://predomics.github.io/predomicspkg/reference/get_Parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return list of parents — get_Parents","text":"pop: population list","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/get_Parents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return list of parents — get_Parents","text":"list individuals (= population) containing selected parents","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/glmnetRR.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve with GLMNET and create models — glmnetRR","title":"Solve with GLMNET and create models — glmnetRR","text":"Create Models applying randomized roundings solution given GLMNET","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/glmnetRR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve with GLMNET and create models — glmnetRR","text":"","code":"glmnetRR(clf, X, y)"},{"path":"https://predomics.github.io/predomicspkg/reference/ibd.html","id":null,"dir":"Reference","previous_headings":"","what":"Inflammatory Bowel Disease (frequencies) from the MetaHIT study — ibd","title":"Inflammatory Bowel Disease (frequencies) from the MetaHIT study — ibd","text":"dataset consists frequency abundance files downloaded http://waldronlab.io/curatedMetagenomicData/ list containing two elements: () X data matrix 1045 species 396 observations (ii) patient class = -1 (n=148) healthy controls (n=248)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/ibd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Inflammatory Bowel Disease (frequencies) from the MetaHIT study — ibd","text":"Nielsen, H Bjørn, Mathieu Almeida, Agnieszka Sierakowska Juncker, Simon Rasmussen, Junhua Li, Shinichi Sunagawa, Damian R Plichta, et al “Identification assembly genomes genetic elements complex metagenomic samples without using reference genomes.” Nature biotechnology (July 6, 2014): 1–11.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/index2names.html","id":null,"dir":"Reference","previous_headings":"","what":"index2names — index2names","title":"index2names — index2names","text":"Transforms feature indexes feature names","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/index2names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"index2names — index2names","text":"","code":"index2names(X, var.ind)"},{"path":"https://predomics.github.io/predomicspkg/reference/index2names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"index2names — index2names","text":"X: dataset var.ind: feature index vector","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/index2names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"index2names — index2names","text":"names features","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/individual.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an object individual — individual","title":"Creates an object individual — individual","text":"Creates object individual","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/individual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an object individual — individual","text":"","code":"individual(   X,   y,   clf,   coeffs = NULL,   ind = NULL,   eval.all = FALSE,   signs = NULL,   obj = NULL,   res_clf = NULL )"},{"path":"https://predomics.github.io/predomicspkg/reference/individual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an object individual — individual","text":"X: data matrix variables rows observations columns y: class vector clf: object containing classifier information ind: indexes variables forming individual null give function dense vector (via coeff parameter) also want generate individual coeffs: coefficients model, dense vector (case, ind need null), non zero values, null new individual genrated obj: object incorporated model (default:NULL). use usually SOTA. res_clf: provided information mda etc can found transmitted model object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/individual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an object individual — individual","text":"individual (model) object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isClf.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a classifier — isClf","title":"Evaluates wether an object is a classifier — isClf","text":"Evaluates wether object classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isClf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a classifier — isClf","text":"","code":"isClf(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isClf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a classifier — isClf","text":"obj: object test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isClf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a classifier — isClf","text":"TRUE object classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is an experiment — isExperiment","title":"Evaluates wether an object is an experiment — isExperiment","text":"Evaluates wether object experiment","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is an experiment — isExperiment","text":"","code":"isExperiment(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is an experiment — isExperiment","text":"obj: object test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is an experiment — isExperiment","text":"TRUE object experiment","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isLearnerSota.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a model SOTA SVM — isLearnerSota","title":"Evaluates wether an object is a model SOTA SVM — isLearnerSota","text":"Evaluates wether learner SOTA ","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isLearnerSota.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a model SOTA SVM — isLearnerSota","text":"","code":"isLearnerSota(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isLearnerSota.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a model SOTA SVM — isLearnerSota","text":"obj: model test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isLearnerSota.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a model SOTA SVM — isLearnerSota","text":"TRUE object SOTA learner","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a model — isModel","title":"Evaluates wether an object is a model — isModel","text":"Evaluates wether object model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a model — isModel","text":"","code":"isModel(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a model — isModel","text":"obj: object test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a model — isModel","text":"TRUE object model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelBTR.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a model BTR — isModelBTR","title":"Evaluates wether an object is a model BTR — isModelBTR","text":"Evaluates wether object model type BTR","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelBTR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a model BTR — isModelBTR","text":"","code":"isModelBTR(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isModelBTR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a model BTR — isModelBTR","text":"obj: model test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelBTR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a model BTR — isModelBTR","text":"TRUE object model BTR","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a model collection objecct — isModelCollection","title":"Evaluates wether an object is a model collection objecct — isModelCollection","text":"Evaluates wether object model collection objecct","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a model collection objecct — isModelCollection","text":"","code":"isModelCollection(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isModelCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a model collection objecct — isModelCollection","text":"obj: object test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelCollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a model collection objecct — isModelCollection","text":"TRUE object model collection objecct","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSota.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a model SOTA — isModelSota","title":"Evaluates wether an object is a model SOTA — isModelSota","text":"Evaluates wether object model type sota","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSota.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a model SOTA — isModelSota","text":"","code":"isModelSota(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSota.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a model SOTA — isModelSota","text":"obj: model test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSota.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a model SOTA — isModelSota","text":"TRUE object model sota","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaGLMNET.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a model SOTA GLMNET — isModelSotaGLMNET","title":"Evaluates wether an object is a model SOTA GLMNET — isModelSotaGLMNET","text":"Evaluates wether object model type sota","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaGLMNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a model SOTA GLMNET — isModelSotaGLMNET","text":"","code":"isModelSotaGLMNET(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaGLMNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a model SOTA GLMNET — isModelSotaGLMNET","text":"mod: model test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaGLMNET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a model SOTA GLMNET — isModelSotaGLMNET","text":"TRUE object model sota GLMNET","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaRF.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a model SOTA RF — isModelSotaRF","title":"Evaluates wether an object is a model SOTA RF — isModelSotaRF","text":"Evaluates wether object model type sota","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaRF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a model SOTA RF — isModelSotaRF","text":"","code":"isModelSotaRF(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaRF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a model SOTA RF — isModelSotaRF","text":"mod: model test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaRF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a model SOTA RF — isModelSotaRF","text":"TRUE object model sota RF","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaSVM.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a model SOTA SVM — isModelSotaSVM","title":"Evaluates wether an object is a model SOTA SVM — isModelSotaSVM","text":"Evaluates wether object model type sota","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaSVM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a model SOTA SVM — isModelSotaSVM","text":"","code":"isModelSotaSVM(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaSVM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a model SOTA SVM — isModelSotaSVM","text":"obj: model test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelSotaSVM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a model SOTA SVM — isModelSotaSVM","text":"TRUE object model sota SVM","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelTerda.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a model BTR Terda — isModelTerda","title":"Evaluates wether an object is a model BTR Terda — isModelTerda","text":"Evaluates wether object model type BTR","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelTerda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a model BTR Terda — isModelTerda","text":"","code":"isModelTerda(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isModelTerda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a model BTR Terda — isModelTerda","text":"mod: model test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isModelTerda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a model BTR Terda — isModelTerda","text":"TRUE object model BTR Terda","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates wether an object is a population of models — isPopulation","title":"Evaluates wether an object is a population of models — isPopulation","text":"Evaluates wether object population models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates wether an object is a population of models — isPopulation","text":"","code":"isPopulation(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/isPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates wether an object is a population of models — isPopulation","text":"obj: object test","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isPopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates wether an object is a population of models — isPopulation","text":"TRUE object population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isclose.html","id":null,"dir":"Reference","previous_headings":"","what":"tests weather two values are close — isclose","title":"tests weather two values are close — isclose","text":"Asserts wether two vectors length close value   given threshold","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isclose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tests weather two values are close — isclose","text":"","code":"isclose(x, y, e = 1e-10)"},{"path":"https://predomics.github.io/predomicspkg/reference/isclose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tests weather two values are close — isclose","text":"x: condition tested y: message printed","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/isclose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tests weather two values are close — isclose","text":"TRUE distance two numbers smaller given value","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfDenseVecToListOfModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a model object from a list of vector coefficients — listOfDenseVecToListOfModels","title":"Builds a model object from a list of vector coefficients — listOfDenseVecToListOfModels","text":"Builds model object list vector coefficients.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfDenseVecToListOfModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a model object from a list of vector coefficients — listOfDenseVecToListOfModels","text":"","code":"listOfDenseVecToListOfModels(X, y, clf, v, lobj = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/listOfDenseVecToListOfModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a model object from a list of vector coefficients — listOfDenseVecToListOfModels","text":"X: dataset y: labels clf: classifier v: list vectors coeffs. example, v=list( c(0.0,1.0,0.0,-1.0) , c(1.0,1.0,0.0,0.0) , c(0.0,1.0,1.0,-1.0) ) lobj: list objects add elements model objects null (default:NULL)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfDenseVecToListOfModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a model object from a list of vector coefficients — listOfDenseVecToListOfModels","text":"model object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfDenseVecToModelCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a list of dense vector coefficients from a list of models — listOfDenseVecToModelCollection","title":"Builds a list of dense vector coefficients from a list of models — listOfDenseVecToModelCollection","text":"Builds list dense vector coefficients list models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfDenseVecToModelCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a list of dense vector coefficients from a list of models — listOfDenseVecToModelCollection","text":"","code":"listOfDenseVecToModelCollection(clf, X, y, v)"},{"path":"https://predomics.github.io/predomicspkg/reference/listOfDenseVecToModelCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a list of dense vector coefficients from a list of models — listOfDenseVecToModelCollection","text":"clf: classifier X: dataset y: labels v: list dense vectors","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfDenseVecToModelCollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a list of dense vector coefficients from a list of models — listOfDenseVecToModelCollection","text":"model collection","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModels2ModelCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"listOfModels2ModelCollection — listOfModels2ModelCollection","title":"listOfModels2ModelCollection — listOfModels2ModelCollection","text":"Structures list predomics objects structured collection k_sparsity.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModels2ModelCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"listOfModels2ModelCollection — listOfModels2ModelCollection","text":"","code":"listOfModels2ModelCollection(pop, nBest = NA)"},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModels2ModelCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"listOfModels2ModelCollection — listOfModels2ModelCollection","text":"pop: population (list) predomics objects nBest: number elements return sparsity (default:NA)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModels2ModelCollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"listOfModels2ModelCollection — listOfModels2ModelCollection","text":"model collection object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToDenseCoefMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"listOfModelsToDenseCoefMatrix — listOfModelsToDenseCoefMatrix","title":"listOfModelsToDenseCoefMatrix — listOfModelsToDenseCoefMatrix","text":"model list models convert dense format convert data.frame","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToDenseCoefMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"listOfModelsToDenseCoefMatrix — listOfModelsToDenseCoefMatrix","text":"","code":"listOfModelsToDenseCoefMatrix(   clf,   X,   y,   list.models,   rm.empty = TRUE,   order.row = TRUE )"},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToDenseCoefMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"listOfModelsToDenseCoefMatrix — listOfModelsToDenseCoefMatrix","text":"clf: classifier object X: dataset y: class vector list.model: list model objects rm.empty: remove null models list (default:TRUE) order.row: order rows occurence (default:TRUE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToDenseCoefMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"listOfModelsToDenseCoefMatrix — listOfModelsToDenseCoefMatrix","text":"data frame model coefficients rows","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToListOfDenseVec.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a list of dense vector coefficients from a list of models — listOfModelsToListOfDenseVec","title":"Builds a list of dense vector coefficients from a list of models — listOfModelsToListOfDenseVec","text":"Builds list dense vector coefficients list models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToListOfDenseVec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a list of dense vector coefficients from a list of models — listOfModelsToListOfDenseVec","text":"","code":"listOfModelsToListOfDenseVec(clf, X, y, list.models)"},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToListOfDenseVec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a list of dense vector coefficients from a list of models — listOfModelsToListOfDenseVec","text":"clf: classifier X: dataset y: labels list.models: list models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToListOfDenseVec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a list of dense vector coefficients from a list of models — listOfModelsToListOfDenseVec","text":"list dense vectors coefficient","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToListOfSparseVec.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a list of sparse vector coefficients from a list of models — listOfModelsToListOfSparseVec","title":"Builds a list of sparse vector coefficients from a list of models — listOfModelsToListOfSparseVec","text":"Builds list sparse vector coefficients list models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToListOfSparseVec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a list of sparse vector coefficients from a list of models — listOfModelsToListOfSparseVec","text":"","code":"listOfModelsToListOfSparseVec(list.models)"},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToListOfSparseVec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a list of sparse vector coefficients from a list of models — listOfModelsToListOfSparseVec","text":"list.models: list models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfModelsToListOfSparseVec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a list of sparse vector coefficients from a list of models — listOfModelsToListOfSparseVec","text":"list dense vectors coefficient","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfSparseVecToListOfModels.html","id":null,"dir":"Reference","previous_headings":"","what":"listOfSparseVecToListOfModels — listOfSparseVecToListOfModels","title":"listOfSparseVecToListOfModels — listOfSparseVecToListOfModels","text":"Converts list \"SparseVec\" objects onto list predomics objects","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfSparseVecToListOfModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"listOfSparseVecToListOfModels — listOfSparseVecToListOfModels","text":"","code":"listOfSparseVecToListOfModels(X, y, clf, v, lobj = NULL, eval.all = FALSE)"},{"path":"https://predomics.github.io/predomicspkg/reference/listOfSparseVecToListOfModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"listOfSparseVecToListOfModels — listOfSparseVecToListOfModels","text":"X: dataset y: labels clf: classifier v: list vectors coeffs. example, v=list( c(0.0,1.0,0.0,-1.0) , c(1.0,1.0,0.0,0.0) , c(0.0,1.0,1.0,-1.0) ) lobj: list objects add elements model objects null (default:NULL) eval.: evaluate population (default:FALSE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/listOfSparseVecToListOfModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"listOfSparseVecToListOfModels — listOfSparseVecToListOfModels","text":"model object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/loadPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a population from a file — loadPopulation","title":"Load a population from a file — loadPopulation","text":"function used load population file disk (must working directory)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/loadPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a population from a file — loadPopulation","text":"","code":"loadPopulation(fileName)"},{"path":"https://predomics.github.io/predomicspkg/reference/loadPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a population from a file — loadPopulation","text":"fileName: name file population stored","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/loadPopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a population from a file — loadPopulation","text":"population object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/loadResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the results of a fit — loadResults","title":"Load the results of a fit — loadResults","text":"Load results fit","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/loadResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the results of a fit — loadResults","text":"","code":"loadResults(fileName)"},{"path":"https://predomics.github.io/predomicspkg/reference/make.counter.html","id":null,"dir":"Reference","previous_headings":"","what":"Function used to create the counter for building clf$experiment$id — make.counter","title":"Function used to create the counter for building clf$experiment$id — make.counter","text":"Function used create counter building clf$experiment$id","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/make.counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function used to create the counter for building clf$experiment$id — make.counter","text":"","code":"make.counter()"},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureAnnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureAnnot","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureAnnot","text":"function takes population models creates table annotation features,  prevalence models dataset well different statistics","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureAnnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureAnnot","text":"","code":"makeFeatureAnnot(pop, X, y, clf)"},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureAnnot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureAnnot","text":"pop: population models X: X dataset compute abundance prevalence y: target class clf: object containing different parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureAnnot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureAnnot","text":"list two data.frames one containing coefficients per model data.frame features","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureModelPrevalenceNetworkCooccur.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkCooccur","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkCooccur","text":"function use coocur package compute co-occurance features population models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureModelPrevalenceNetworkCooccur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkCooccur","text":"","code":"makeFeatureModelPrevalenceNetworkCooccur(   pop.noz,   feature.annot,   alpha = 0.05,   verbose = TRUE,   layout = \"circlular\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureModelPrevalenceNetworkCooccur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkCooccur","text":"pop.noz: data.frame features rows models columns.  table contains feature coefficients models obtained makeFeatureAnnot() feature.annot: data frame annotation features obtained makeFeatureAnnot() alpha: significane p-value co-occurance. verbose: print information run layout: network layout default circular (layout_in_circle) weighted Fruchterman-Reingold otherwise","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureModelPrevalenceNetworkCooccur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkCooccur","text":"plots graph","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureModelPrevalenceNetworkMiic.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkMiic","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkMiic","text":"function use miic package compute co-occurance features population models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureModelPrevalenceNetworkMiic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkMiic","text":"","code":"makeFeatureModelPrevalenceNetworkMiic(   pop.noz,   feature.annot,   cor.th = 0.3,   verbose = TRUE,   layout = \"circlular\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureModelPrevalenceNetworkMiic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkMiic","text":"pop.noz: data.frame features rows models columns.  table contains feature coefficients models obtained makeFeatureAnnot() feature.annot: data frame annotation features obtained makeFeatureAnnot() cor.th: threshold abtained partial correlation value verbose: print information run layout: network layout default circular (layout_in_circle) weighted Fruchterman-Reingold otherwise","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/makeFeatureModelPrevalenceNetworkMiic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints as text the detail on a given experiment along with summarized results (if computed) — makeFeatureModelPrevalenceNetworkMiic","text":"plots graph","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltBestScoreCV.html","id":null,"dir":"Reference","previous_headings":"","what":"mergeMeltBestScoreCV — mergeMeltBestScoreCV","title":"mergeMeltBestScoreCV — mergeMeltBestScoreCV","text":"mergeMeltBestScoreCV returns list data frames contain best performance different learners without focus sparsity.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltBestScoreCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mergeMeltBestScoreCV — mergeMeltBestScoreCV","text":"","code":"mergeMeltBestScoreCV(   list.results.digest,   k_catalogue = NULL,   score = \"auc_\",   penalty = 0,   min.kfold.nb = FALSE )"},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltBestScoreCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mergeMeltBestScoreCV — mergeMeltBestScoreCV","text":"list.results.digest: list digest objects one learner used. example, list(res.terda.digest, res.terga.digest, res.terbeam.digest) k_catalogue: k_catalogue serve build result matrix (default:NULL) score: name score needs used whole dataset visualization. min.kfold.nb: wether restrict experiments smallest number k-folds comparative analyses (default = FALSE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltBestScoreCV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mergeMeltBestScoreCV — mergeMeltBestScoreCV","text":"list two data.frames","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltBestScoreCV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mergeMeltBestScoreCV — mergeMeltBestScoreCV","text":"Merge list cross validation scores form digest results","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltImportanceCV.html","id":null,"dir":"Reference","previous_headings":"","what":"mergeMeltImportanceCV — mergeMeltImportanceCV","title":"mergeMeltImportanceCV — mergeMeltImportanceCV","text":"mergeMeltImportanceCV returns list data frames contain feature importance different learners without focus sparsity.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltImportanceCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mergeMeltImportanceCV — mergeMeltImportanceCV","text":"","code":"mergeMeltImportanceCV(   list.results,   filter.cv.prev = 0.5,   min.kfold.nb = FALSE,   type = \"mda\",   learner.grep.pattern = \"*\",   nb.top.features = 25,   feature.selection = NULL,   fixed.order = FALSE,   scaled.importance = TRUE,   make.plot = TRUE,   main = FALSE,   cv.prevalence = TRUE )"},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltImportanceCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mergeMeltImportanceCV — mergeMeltImportanceCV","text":"list.results.digest: list digest objects one learner used. example, list(res.terda.digest, res.terga.digest, res.terbeam.digest) filter.cv.prev: filter variable learner based appearence prevalence cross validation. min.kfold.nb: wether restrict experiments smallest number k-folds comparative analyses (default = FALSE) type: type importance \"mda (mean decreased accuracy)\" \"pda (prevalence decreased accuracy)\" (default = mda) learner.grep.pattern: select subset learners using grep pattern (default:\"*\") nb.top.features: number top features focus plot feature.selection: names features selected (default:NULL) fixed.order: order features plot follow feature selection one (default = FALSE) scaled.importance: scaled importance importance multipied prevalence folds. (default = TRUE) used, mean mda  scaled prevalence feature folds ordered subsequently make.plot: make plot learners main: add title graph correct alignment (default:FALSE) cv.prevalence: wether plot distribution prevalence feature top-models k-fold graph (default:FALSE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltImportanceCV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mergeMeltImportanceCV — mergeMeltImportanceCV","text":"list several data.frames ggplot object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltImportanceCV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mergeMeltImportanceCV — mergeMeltImportanceCV","text":"Merge list cross validation scores form digest results","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreCV.html","id":null,"dir":"Reference","previous_headings":"","what":"mergeMeltScoreCV — mergeMeltScoreCV","title":"mergeMeltScoreCV — mergeMeltScoreCV","text":"mergeMeltScoreCV returns list data frames contain performance digest list sparsity.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mergeMeltScoreCV — mergeMeltScoreCV","text":"","code":"mergeMeltScoreCV(   list.results.digest,   k_catalogue,   generalization = TRUE,   score = \"auc_\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mergeMeltScoreCV — mergeMeltScoreCV","text":"list.results.digest: list digest objects one learner used. example, list(res.terda.digest, res.terga.digest, res.terbeam.digest) k_catalogue: k_catalogue serve build result matrix generalization: get results CV generalization (TRUE) empirical otherwise (default: TRUE) score: name score needs used whole dataset visualization.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreCV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mergeMeltScoreCV — mergeMeltScoreCV","text":"list two data.frames","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreCV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mergeMeltScoreCV — mergeMeltScoreCV","text":"Merge list cross validation scores form digest results","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreEmpirical.html","id":null,"dir":"Reference","previous_headings":"","what":"mergeMeltScoreEmpirical — mergeMeltScoreEmpirical","title":"mergeMeltScoreEmpirical — mergeMeltScoreEmpirical","text":"mergeMeltScoreEmpirical returns data frames contain performance digest list sparsity.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreEmpirical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mergeMeltScoreEmpirical — mergeMeltScoreEmpirical","text":"","code":"mergeMeltScoreEmpirical(list.results.digest, k_catalogue, score = \"fit_\")"},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreEmpirical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mergeMeltScoreEmpirical — mergeMeltScoreEmpirical","text":"list.results.digest: list digest objects one learner used. example, list(res.terda.digest, res.terga.digest, res.terbeam.digest) k_catalogue: k_catalogue serve build result matrix score: score used value (default: fit_)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreEmpirical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mergeMeltScoreEmpirical — mergeMeltScoreEmpirical","text":"data.frame","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeMeltScoreEmpirical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mergeMeltScoreEmpirical — mergeMeltScoreEmpirical","text":"Merge list empirical scores form digest results","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeResults.html","id":null,"dir":"Reference","previous_headings":"","what":"mergeResults — mergeResults","title":"mergeResults — mergeResults","text":"mergeResults returns list data frames contain performance digest list sparsity.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mergeResults — mergeResults","text":"","code":"mergeResults(   list.results,   sparsity = NULL,   penalty = 0.001,   best.k = NULL,   colors = NULL,   pch = NULL )"},{"path":"https://predomics.github.io/predomicspkg/reference/mergeResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mergeResults — mergeResults","text":"list.results: list Experiment objects one learner used. example, list(res.terda, res.terga, res.terbeam) sparsity: Sometimes given method results somehow different sparsity. param allow set catalogue sparsity best.k: vector defining wether given k used set best model selection (default:NULL). colors: vector defining colors used graphics. specified set default. (default:NULL). pch: vector defining shape points used graphics. specified set default. (default:NULL).","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mergeResults — mergeResults","text":"list data.frames lists","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mergeResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mergeResults — mergeResults","text":"Merge list Scores form digest results","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/metal.html","id":null,"dir":"Reference","previous_headings":"","what":"metal: metal searching algorithm — metal","title":"metal: metal searching algorithm — metal","text":"metal model search algorithm list beam search approach get populations GA.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/metal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metal: metal searching algorithm — metal","text":"","code":"metal(   sparsity = 1:10,   max.nb.features = 1000,   popSaveFile = \"NULL\",   saveFiles = FALSE,   pathSave = \"NULL\",   language = \"mix\",   scoreFormula = scoreRatio,   epsilon = \"NULL\",   objective = \"auc\",   k_penalty = 0,   evalToFit = \"accuracy_\",   estimate_coefs = FALSE,   intercept = \"NULL\",   testAllSigns = FALSE,   plot = FALSE,   verbose = TRUE,   warnings = FALSE,   debug = FALSE,   print_ind_method = \"short\",   parallelize.folds = TRUE,   nCores = 10,   seed = \"NULL\",   experiment.id = \"NULL\",   experiment.description = \"NULL\",   experiment.save = \"nothing\",   list.clfs = \"NULL\",   unificator.method = \"terga2\",   unificator.evolver = \"v2m_new\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/metal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metal: metal searching algorithm — metal","text":"language language used different algorithms bin, bininter, ter, terinter, ratio, (default:\"terinter\") sparsity: number features given model. vector multiple lengths. max.nb.features: focuses subset top significant features (default:1000) popSaveFile: (??) saveFiles: ?? scoreFormula: Function contains ratio Formula specific ones epsilon: small value used ratio language (useCustomLanguage) (default: NULL). null going calculated minimum value X divided 10. objective: can auc, cor aic. Terga can also predict regression, class prediction. (default:auc) estimate_coefs: non ternary solution aic objective (default:FALSE) evalToFit: model performance attribute use fitting score (default:\"fit_\"). choices c(\"auc_\",\"accuracy_\",\"precision_\",\"recall_\",\"f_score_\") k_penalty: Penalization fit k_sparsity (default: 0) intercept: (??) (default:NULL) testAllSigns: ?? plot: plot graphics indicating evolution simulation (default:FALSE) verbose: print information progress algorithm (default:TRUE) warnings: Print warnings runnig (default:FALSE). debug: print debug information (default:FALSE) print_ind_method: One c(\"short\",\"graphical\") indicates print model subsequently population run (default:\"short\"). parallelize.folds: parallelize folds cross-validating (default:TRUE) nCores: number cores execute program. nCores=1 program runs non parallel mode seed: seed used reproductibility. seed=NULL taken account (default:NULL). experiment.id: id experiment used plots comparitive analyses (default learner's name, specified) experiment.description: longer description experiment. important many experiments run can also printed printExperiment function. experiment.save: Data experiment can saved different levels completness, options selected c(\"nothing\", \"minimal\", \"full\"), default \"minimal\" list.clfs: list Genetor Unificator unificator.method: default unificator terga2. one specified yield stop program. unificator.evolver: default evolve method used unificator default terga2.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/metal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metal: metal searching algorithm — metal","text":"object containing list parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/modelCollectionToPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a model collection to a population (or list of model objects) — modelCollectionToPopulation","title":"Transform a model collection to a population (or list of model objects) — modelCollectionToPopulation","text":"Transform model collection population (list model objects)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/modelCollectionToPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a model collection to a population (or list of model objects) — modelCollectionToPopulation","text":"","code":"modelCollectionToPopulation(mod.collection)"},{"path":"https://predomics.github.io/predomicspkg/reference/modelCollectionToPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a model collection to a population (or list of model objects) — modelCollectionToPopulation","text":"mod.collection: modelCollection object organized k_sparsity","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/modelToDenseVec.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the model object onto dense format (long) one — modelToDenseVec","title":"Transform the model object onto dense format (long) one — modelToDenseVec","text":"Builds model object based model dense (long) format.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/modelToDenseVec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the model object onto dense format (long) one — modelToDenseVec","text":"","code":"modelToDenseVec(natts, mod)"},{"path":"https://predomics.github.io/predomicspkg/reference/modelToDenseVec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the model object onto dense format (long) one — modelToDenseVec","text":"natts: number attributes mod: predomics model object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/modelToDenseVec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the model object onto dense format (long) one — modelToDenseVec","text":"dense (long) format model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/multipleRR.html","id":null,"dir":"Reference","previous_headings":"","what":"multipleRR — multipleRR","title":"multipleRR — multipleRR","text":"computes multiple randomized rounding given vector wi","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/multipleRR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multipleRR — multipleRR","text":"","code":"multipleRR(clf, X, y, w, n, remove.zero.vec = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/multipleRR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multipleRR — multipleRR","text":"clf: classifier parameter object X: data matrix variables rows observations columns y: response vector w: vector wi coefficients n: number round roundings compute remove.zero.vec: whether remove zero vectors","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/multipleRR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multipleRR — multipleRR","text":"population dense vectors","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/multipleRR_par.html","id":null,"dir":"Reference","previous_headings":"","what":"multipleRR_par — multipleRR_par","title":"multipleRR_par — multipleRR_par","text":"computes parallel multiple randomized rounding given vector wi","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/multipleRR_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multipleRR_par — multipleRR_par","text":"","code":"multipleRR_par(clf, X, y, w, n, remove.zero.vec = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/multipleRR_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multipleRR_par — multipleRR_par","text":"clf: classifier parameter object X: data matrix variables rows observations columns y: response vector w: vector wi coefficients n: number round roundings compute remove.zero.vec: whether remove zero vectors","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/multipleRR_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multipleRR_par — multipleRR_par","text":"population dense vectors","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mutate.html","id":null,"dir":"Reference","previous_headings":"","what":"Changes feature indexes in a given percentage of models. — mutate","title":"Changes feature indexes in a given percentage of models. — mutate","text":"function used terga1 create new combinations features based existing ones parents.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mutate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Changes feature indexes in a given percentage of models. — mutate","text":"","code":"mutate(clf, pop, selection, seed = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/mutate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Changes feature indexes in a given percentage of models. — mutate","text":"clf: classifier parameter object pop: population (.e. list) index vectors selection: Indexes population pointing subset models changed seed: reproductibility purpose fix random generator number.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/mutate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Changes feature indexes in a given percentage of models. — mutate","text":"population models among mutated ones","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/myAssert.html","id":null,"dir":"Reference","previous_headings":"","what":"Asserts a condition and prints a message or stops the block — myAssert","title":"Asserts a condition and prints a message or stops the block — myAssert","text":"Asserts condition prints message stops block","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/myAssert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asserts a condition and prints a message or stops the block — myAssert","text":"","code":"myAssert(condition, message, stop = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/myAssert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asserts a condition and prints a message or stops the block — myAssert","text":"condition: condition tested message: message printed stop: TRUE stop block","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/myAssertNotNullNorNa.html","id":null,"dir":"Reference","previous_headings":"","what":"Asserts the existance of an object and prints a message or stops the block — myAssertNotNullNorNa","title":"Asserts the existance of an object and prints a message or stops the block — myAssertNotNullNorNa","text":"Asserts existance object prints message stops   block","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/myAssertNotNullNorNa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asserts the existance of an object and prints a message or stops the block — myAssertNotNullNorNa","text":"","code":"myAssertNotNullNorNa(obj, message = \"\", stop = FALSE)"},{"path":"https://predomics.github.io/predomicspkg/reference/myAssertNotNullNorNa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asserts the existance of an object and prints a message or stops the block — myAssertNotNullNorNa","text":"obj: condition tested message: message printed stop: TRUE stop block","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/names2index.html","id":null,"dir":"Reference","previous_headings":"","what":"names2index — names2index","title":"names2index — names2index","text":"Transforms feature names feature indexes","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/names2index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"names2index — names2index","text":"","code":"names2index(X, var.names)"},{"path":"https://predomics.github.io/predomicspkg/reference/names2index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"names2index — names2index","text":"X: dataset var.names: feature names vector","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/names2index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"names2index — names2index","text":"index features","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/normModelCoeffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize the model coefficients needed for the plot — normModelCoeffs","title":"Normalize the model coefficients needed for the plot — normModelCoeffs","text":"Normalize model coefficients needed plot","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/normModelCoeffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize the model coefficients needed for the plot — normModelCoeffs","text":"","code":"normModelCoeffs(mod, X, y, sort.features = FALSE, sort.ind = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/normModelCoeffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize the model coefficients needed for the plot — normModelCoeffs","text":"mod: model plot X: data matrix variables rows observations columns y: class vector sort.features: wether features need sorted correlation 'y' (default:FALSE) sort.ind: computing sorting can take time computed every model can computed outside function passed parameter","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/normModelCoeffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize the model coefficients needed for the plot — normModelCoeffs","text":"normalized coefficients","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/obesity.html","id":null,"dir":"Reference","previous_headings":"","what":"Obesity (frequencies) from the MetaHIT study — obesity","title":"Obesity (frequencies) from the MetaHIT study — obesity","text":"dataset consists frequency abundance files downloaded http://waldronlab.io/curatedMetagenomicData/ list containing two elements: () X data matrix 1045 species 292 observations (ii) patient class = -1 (n=167) healthy controls (n=96). Caution, dataset also class 0 overweight patients, needs omited X y","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/obesity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Obesity (frequencies) from the MetaHIT study — obesity","text":"Le Chatelier, Emmanuelle, Trine Nielsen, Junjie Qin, Edi Prifti, Falk Hildebrand, Gwen Falony, Mathieu Almeida, et al “Richness human gut microbiome correlates metabolic markers.” Nature 500, . 7464 (April 9, 2014): 541–546.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotAUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze the results from a given classifier — plotAUC","title":"Analyze the results from a given classifier — plotAUC","text":"Analyze results given classifier.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotAUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze the results from a given classifier — plotAUC","text":"","code":"plotAUC(score, y, main = \"\", ci = TRUE, percent = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/plotAUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze the results from a given classifier — plotAUC","text":"score: y^ given model y: class predted main: title graph ci: point shape graph percent: color graph","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotAUC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze the results from a given classifier — plotAUC","text":"roc object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotAUCg.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the AUC of a given classifier — plotAUCg","title":"Plot the AUC of a given classifier — plotAUCg","text":"Analyze results given classifier.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotAUCg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the AUC of a given classifier — plotAUCg","text":"","code":"plotAUCg(mod = NULL, score, y, main = \"\", ci = TRUE, show.intercept = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/plotAUCg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the AUC of a given classifier — plotAUCg","text":"mod: predomics model object (default = NULL) score: y^ given model y: class predicted main: title graph ci: point shape graph show.intercept: plot intercept graph (default:TRUE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotAUCg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the AUC of a given classifier — plotAUCg","text":"ggplot object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotAbundanceByClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the prevalence of a list of features in the whole dataset and per each class — plotAbundanceByClass","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotAbundanceByClass","text":"Plots abundance given number features class tests significance","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotAbundanceByClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotAbundanceByClass","text":"","code":"plotAbundanceByClass(   features,   X,   y,   topdown = TRUE,   main = \"\",   plot = TRUE,   col.pt = c(\"deepskyblue4\", \"firebrick4\"),   col.bg = c(\"deepskyblue1\", \"firebrick1\") )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotAbundanceByClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotAbundanceByClass","text":"features: list features features indexes wish compute prevalence X: dataset compute prevalence y: provided also compute hte prevalence per class (default:NULL) topdown: showing features top-way around (default:TRUE) main: main title (default:none) plot: TRUE provides plot, otherwise return different metrics prevalence enrichment statistics col.pt: colors point border (-1:deepskyblue4, 1:firebrick4) col.bg: colors point fill (-1:deepskyblue1, 1:firebrick1)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotAbundanceByClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotAbundanceByClass","text":"ggplot object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeBestCV.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a graph for a given score — plotComparativeBestCV","title":"Plots a graph for a given score — plotComparativeBestCV","text":"plotComparativeCV plots digested.results data object given score.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeBestCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a graph for a given score — plotComparativeBestCV","text":"","code":"plotComparativeBestCV(   digested.results,   ylim = c(0.5, 1),   generalization = TRUE,   score = \"auc_\",   ci = TRUE,   main = \"\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeBestCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a graph for a given score — plotComparativeBestCV","text":"digested.results: list data.frames containing performance results lists learners. data object returned function merge_digestScores() ylim: y-axis zoom plot score: default (auc_) score cross-validation representation main: name graphic","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeBestCV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a graph for a given score — plotComparativeBestCV","text":"ggplot graphs","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeCV.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a graph for a given score — plotComparativeCV","title":"Plots a graph for a given score — plotComparativeCV","text":"plotComparativeCV plots digested.results data object given score.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a graph for a given score — plotComparativeCV","text":"","code":"plotComparativeCV(   digested.results,   ylim = c(0.5, 1),   generalization = TRUE,   score = \"auc_\",   ci = TRUE,   main = \"\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a graph for a given score — plotComparativeCV","text":"digested.results: list data.frames containing performance results lists learners. data object returned function merge_digestScores() ylim: y-axis zoom plot generalization: (default:TRUE) generalization score used score: default (auc_) score cross-validation representation ci: confidence intereval plotted (default:TRUE) main: name graphic","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeCV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a graph for a given score — plotComparativeCV","text":"ggplot graphs","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeEmpiricalScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a graph for a given score — plotComparativeEmpiricalScore","title":"Plots a graph for a given score — plotComparativeEmpiricalScore","text":"plotComparativeEmpiricalScore plots digested.results data object given score.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeEmpiricalScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a graph for a given score — plotComparativeEmpiricalScore","text":"","code":"plotComparativeEmpiricalScore(   digested.results,   ylim = c(0.5, 1),   score = \"auc_\",   main = \"\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeEmpiricalScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a graph for a given score — plotComparativeEmpiricalScore","text":"digested.results: list data.frames containing performance results lists learners. data object returned function merge_digestScores() ylim: y-axis zoom plot score: default (auc_) score main: name graphic","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeEmpiricalScore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a graph for a given score — plotComparativeEmpiricalScore","text":"ggplot graphs","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot performance scores for multiple learners — plotComparativeResults","title":"Plot performance scores for multiple learners — plotComparativeResults","text":"plotComparativeResults plots digested.results data object compare performance results different learners.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot performance scores for multiple learners — plotComparativeResults","text":"","code":"plotComparativeResults(   digested.results,   plot = TRUE,   ylim = c(0.5, 1),   best = FALSE,   ci = FALSE,   main = \"\",   mode = \"classification\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot performance scores for multiple learners — plotComparativeResults","text":"digested.results: list data.frames containing performance results lists learners. data object returned function merge_digestScores() ylim: y-axis zoom plot best: swith plot best values instead declining k_sparsity main: name graphic mode: either classification regression (default:classification)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot performance scores for multiple learners — plotComparativeResults","text":"list ggplot graphs plot set FALSE pannel organized graph otherwise.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeResultsBest.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot performance scores for multiple learners — plotComparativeResultsBest","title":"Plot performance scores for multiple learners — plotComparativeResultsBest","text":"plotComparativeResultsBest plots digested.results data object compare performance results different learners focusing best model.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeResultsBest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot performance scores for multiple learners — plotComparativeResultsBest","text":"","code":"plotComparativeResultsBest(digested.results, plot = TRUE, ylim = c(0.5, 1))"},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeResultsBest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot performance scores for multiple learners — plotComparativeResultsBest","text":"digested.results: list data.frames containing performance results lists learners. data object returned function merge_digestScores() ylim: y-axis zoom plot","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotComparativeResultsBest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot performance scores for multiple learners — plotComparativeResultsBest","text":"list ggplot graphs plot set FALSE pannel organized graph otherwise.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotFeatureModelCoeffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the prevalence of a list of features in the whole dataset and per each class — plotFeatureModelCoeffs","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotFeatureModelCoeffs","text":"Plots coefficients subset features models found","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotFeatureModelCoeffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotFeatureModelCoeffs","text":"","code":"plotFeatureModelCoeffs(   feat.model.coeffs,   topdown = TRUE,   main = \"\",   col = c(\"deepskyblue1\", \"white\", \"firebrick1\"),   vertical.label = TRUE )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotFeatureModelCoeffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotFeatureModelCoeffs","text":"feat.model.coeffs: feature vs. model coeffient table topdown: showing features top-way around (default:TRUE) main: main title (default:none) col: colors used coeffients (default: -1 = deepskyblue1, 0 = white, 1 = firebrick1) vertical.label: wether x-axis labels vertical (default:TRUE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotFeatureModelCoeffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotFeatureModelCoeffs","text":"ggplot object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotImportanceFeaturesFBMobjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize a list containing outouts of getImportanceFeaturesFBMobjects — plotImportanceFeaturesFBMobjects","title":"Visualize a list containing outouts of getImportanceFeaturesFBMobjects — plotImportanceFeaturesFBMobjects","text":"combine 4 datasets generated  getImportanceFeaturesFBMobjects function different prediction experiments  (clf object + X + y) ; designed combine predomics results different  X, y source data unified visualization (feature prevalence FBM,  feature importance, feature effect size across groups, feature prevalence  across groups)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotImportanceFeaturesFBMobjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize a list containing outouts of getImportanceFeaturesFBMobjects — plotImportanceFeaturesFBMobjects","text":"","code":"plotImportanceFeaturesFBMobjects(   FBMobjList,   verbose = TRUE,   nb.top.features = 100,   makeplot = TRUE )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotImportanceFeaturesFBMobjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize a list containing outouts of getImportanceFeaturesFBMobjects — plotImportanceFeaturesFBMobjects","text":"FBMobjList List outputs getImportanceFeaturesFBMobjects  function (1 list per experiment combine) verbose print informaiton nb.top.features features retain visualization (top features  highest mean feature importance across datasets) makeplot make pdf file resulting plots (default:TRUE)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotImportanceFeaturesFBMobjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize a list containing outouts of getImportanceFeaturesFBMobjects — plotImportanceFeaturesFBMobjects","text":"Combined visualization feature prevalence FBM + feature  importance + feature effect size across groups + feature prevalence across  groups different predomics prediction tasks","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a model or a population of model objectsas barplots of scaled coefficients. — plotModel","title":"Plots a model or a population of model objectsas barplots of scaled coefficients. — plotModel","text":"Plots model population models barplots, representing feature, length coefficient","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a model or a population of model objectsas barplots of scaled coefficients. — plotModel","text":"","code":"plotModel(   mod,   X,   y,   sort.features = FALSE,   sort.ind = NULL,   feature.name = FALSE,   col.sign = c(\"deepskyblue1\", \"firebrick1\"),   main = \"\",   slim = FALSE,   importance = FALSE,   res_clf = NULL )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a model or a population of model objectsas barplots of scaled coefficients. — plotModel","text":"mod: model plot X: data matrix variables rows observations columns y: class vector sort.features: wether features need sorted correlation 'y' (default: TRUE) sort.ind: computing sorting can take time computed every model can computed outside function passed parameter feature.name: show name features (default:FALSE) col.sign: colors cofficients based sign coefficients (default: -1=deepskyblue1, 1:firebrick1) main: possibility change title function (default:\"\") slim: plot without axis information (default:FALSE) importance: importance (mda) features crossval res_clf: result learning process (default:NULL). provided information MDA extracted importance graphic.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotModelScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a model or a population of model objectsas barplots of scaled coefficients. — plotModelScore","title":"Plots a model or a population of model objectsas barplots of scaled coefficients. — plotModelScore","text":"Plots model score population models barplots, representing feature, length coefficient","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotModelScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a model or a population of model objectsas barplots of scaled coefficients. — plotModelScore","text":"","code":"plotModelScore(   mod = NULL,   y = NULL,   col.sign = c(\"deepskyblue1\", \"firebrick1\"),   main = \"\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotModelScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a model or a population of model objectsas barplots of scaled coefficients. — plotModelScore","text":"mod: model plot y: class predict col.sign: colors cofficients based sign coefficients (default: -1=deepskyblue1, 1:firebrick1) main: possibility change title function (default:\"\")","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a population of models (or a single model) objects as barplots of scaled coefficients. — plotPopulation","title":"Plots a population of models (or a single model) objects as barplots of scaled coefficients. — plotPopulation","text":"Plots model population models barplots, representing feature, length coefficient","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a population of models (or a single model) objects as barplots of scaled coefficients. — plotPopulation","text":"","code":"plotPopulation(   pop,   X,   y,   sort.features = FALSE,   sort.ind = NULL,   col.sign = c(\"deepskyblue1\", \"firebrick1\"),   ncol = 10,   slim = FALSE,   importance = FALSE )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a population of models (or a single model) objects as barplots of scaled coefficients. — plotPopulation","text":"pop: population models plot X: data matrix variables rows observations columns y: class vector sort.features: wether features need sorted correlation 'y' sort.ind: computing sorting can take time computed every model can computed outside function passed parameter col.sign: colors cofficients based sign coefficients (default: -1=deepskyblue1,1:firebrick1) ncol: number graphics line (default: 10) slim: plot without axis information (default:FALSE) importance: importance (mda) features crossval","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the prevalence of a list of features in the whole dataset and per each class — plotPrevalence","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotPrevalence","text":"Plots prevalence given number features","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotPrevalence","text":"","code":"plotPrevalence(   features,   X,   y,   topdown = TRUE,   main = \"\",   plot = TRUE,   col.pt = c(\"deepskyblue4\", \"firebrick4\"),   col.bg = c(\"deepskyblue1\", \"firebrick1\"),   zero.value = 0 )"},{"path":"https://predomics.github.io/predomicspkg/reference/plotPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotPrevalence","text":"features: list features features indexes wish compute prevalence X: dataset compute prevalence y: provided also compute hte prevalence per class (default:NULL) topdown: showing features top-way around (default:TRUE) main: main title (default:none) plot: TRUE provides plot, otherwise return different metrics prevalence enrichment statistics col.pt: colors point border (-1:deepskyblue4, 1:firebrick4) col.bg: colors point fill (-1:deepskyblue1, 1:firebrick1) zero.value: value specifies zero. can different 0 log transformed data instance (default = 0)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the prevalence of a list of features in the whole dataset and per each class — plotPrevalence","text":"ggplot object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotScoreBarcode.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the barcode of the total score as well as positive and negative components — plotScoreBarcode","title":"Plots the barcode of the total score as well as positive and negative components — plotScoreBarcode","text":"Plots barcode total score well positive negative components","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotScoreBarcode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the barcode of the total score as well as positive and negative components — plotScoreBarcode","text":"","code":"plotScoreBarcode(dscore, y, nb.col.levels = 30, main = \"\")"},{"path":"https://predomics.github.io/predomicspkg/reference/plotScoreBarcode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the barcode of the total score as well as positive and negative components — plotScoreBarcode","text":"dscore: object containing different statistics model y: class vector clf: object containing different parameters classifier nb.col.levels: number distinct colors viridis palette (default:30) main: title graphic","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/plotScoreBarcode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the barcode of the total score as well as positive and negative components — plotScoreBarcode","text":"nothing","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/population.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a population of index models. — population","title":"Creates a population of index models. — population","text":"function used terga1 generates list index vectors variable space. vectors can unique . NB clf$params$unique_vars set TRUE can take long time come loop ensures uniqueness individuals.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a population of index models. — population","text":"","code":"population(   clf,   size_ind,   size_world,   best_ancestor = NULL,   size_pop = NULL,   seed = NULL )"},{"path":"https://predomics.github.io/predomicspkg/reference/population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a population of index models. — population","text":"clf: classifier parameter object size_ind: sparsity models. models population number features. size_world: number features can choose indices. needed compute combinatory space search. best_ancestor: can supply popolution individual (vector indeces) lower sparsity. ensure seed part population least genes. added feature observations local optimum lower sparsity lost higher sparsities. size_pop: number models produce (default=NULL). information stored clf$params$size_pop, parameter allows override .","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a population of index models. — population","text":"population index models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/populationGet_X.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the best model from a classifier result — populationGet_X","title":"Get the best model from a classifier result — populationGet_X","text":"Gets given attribute population predomics objects","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/populationGet_X.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the best model from a classifier result — populationGet_X","text":"","code":"populationGet_X(element2get, toVec = TRUE, na.rm = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/populationGet_X.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the best model from a classifier result — populationGet_X","text":"element2get: name attribute get toVec: results unlisted (default:TRUE) na.rm: delete elements NA (default) returning tovec","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/populationGet_X.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the best model from a classifier result — populationGet_X","text":"vector attributes","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/populationSet_X.html","id":null,"dir":"Reference","previous_headings":"","what":"Set models with a given liist of objects — populationSet_X","title":"Set models with a given liist of objects — populationSet_X","text":"Sets given attribute objects given population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/populationSet_X.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set models with a given liist of objects — populationSet_X","text":"","code":"populationSet_X(pop, element2set = NULL, listwithelements = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/populationSet_X.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set models with a given liist of objects — populationSet_X","text":"element2set: name attribute set listwithelements: list containing elements add","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/populationSet_X.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set models with a given liist of objects — populationSet_X","text":"updated population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/populationToDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"populationToDataFrame — populationToDataFrame","title":"populationToDataFrame — populationToDataFrame","text":"model list models extract attribute create dataframe needed exploration","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/populationToDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"populationToDataFrame — populationToDataFrame","text":"","code":"populationToDataFrame(   pop,   attributes = c(\"learner\", \"language\", \"fit_\", \"unpenalized_fit_\", \"auc_\", \"accuracy_\",     \"cor_\", \"aic_\", \"intercept_\", \"eval.sparsity\", \"sign_\", \"precision_\", \"recall_\",     \"f1_\") )"},{"path":"https://predomics.github.io/predomicspkg/reference/populationToDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"populationToDataFrame — populationToDataFrame","text":"pop: list model objects, (.e population models) attributes: list attributes wish data.frame (default:\"learner\",\"language\",\"fit_\", \"unpenalized_fit_\", \"auc_\", \"accuracy_\", \"cor_\", \"aic_\", \"intercept_\", \"eval.sparsity\", \"sign_\",\"precision_\", \"recall_\",\"f1_\")","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/populationToDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"populationToDataFrame — populationToDataFrame","text":"data frame attributes model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printClassifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints as text the detail on a given Classifier object — printClassifier","title":"Prints as text the detail on a given Classifier object — printClassifier","text":"function prints summary Classifier object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printClassifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints as text the detail on a given Classifier object — printClassifier","text":"","code":"printClassifier(obj, indent = \"\\t--- \")"},{"path":"https://predomics.github.io/predomicspkg/reference/printClassifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints as text the detail on a given Classifier object — printClassifier","text":"obj: Classifier object indent: string (default:'tab---') precede element object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printClassifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints as text the detail on a given Classifier object — printClassifier","text":"NULL object valid Classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints as text the detail on a given Experiment object — printExperiment","title":"Prints as text the detail on a given Experiment object — printExperiment","text":"function prints summary Experiment object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints as text the detail on a given Experiment object — printExperiment","text":"","code":"printExperiment(obj, indent = \"\\t--- \")"},{"path":"https://predomics.github.io/predomicspkg/reference/printExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints as text the detail on a given Experiment object — printExperiment","text":"obj: Experiment object indent: string (default:'tab---') precede element object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints as text the detail on a given Experiment object — printExperiment","text":"NULL object valid Experiment","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printModel.html","id":null,"dir":"Reference","previous_headings":"","what":"# plot a horizontal barplot\n#' @export\nplotBarplot <- function(v, rev=TRUE, xlim=range(v), main=","title":"# plot a horizontal barplot\n#' @export\nplotBarplot <- function(v, rev=TRUE, xlim=range(v), main=","text":"Prints model object text","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"# plot a horizontal barplot\n#' @export\nplotBarplot <- function(v, rev=TRUE, xlim=range(v), main=","text":"","code":"printModel(mod, method = \"short\", score = \"fit_\")"},{"path":"https://predomics.github.io/predomicspkg/reference/printModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"# plot a horizontal barplot\n#' @export\nplotBarplot <- function(v, rev=TRUE, xlim=range(v), main=","text":"mod: model plot method: object containing different parameters classifier score: score show fit (default:fit_)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printModelCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints as text the detail on a given ModelCollection object — printModelCollection","title":"Prints as text the detail on a given ModelCollection object — printModelCollection","text":"function prints ModelCollection object. k_sparsity show detail  maximum first models","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printModelCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints as text the detail on a given ModelCollection object — printModelCollection","text":"","code":"printModelCollection(obj, indent = \"\\t--- \", method = \"long\")"},{"path":"https://predomics.github.io/predomicspkg/reference/printModelCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints as text the detail on a given ModelCollection object — printModelCollection","text":"obj: ModelCollection object indent: string (default:'tab---') precede element object \"long\" method. method: output method (default:long) print k_sparsity short information population models,  short method output number models k_sparsity","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printModelCollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints as text the detail on a given ModelCollection object — printModelCollection","text":"NULL object valid ModelCollection.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a population of model objects as text. — printPopulation","title":"Prints a population of model objects as text. — printPopulation","text":"Prints population model objects text","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a population of model objects as text. — printPopulation","text":"","code":"printPopulation(obj, method = \"short\", score = \"fit_\", indent = \"\")"},{"path":"https://predomics.github.io/predomicspkg/reference/printPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a population of model objects as text. — printPopulation","text":"obj: population models plot method: \"digested\" short sumary (one line) printed, otherwise method contain  specific way print model printModel() routine score: score show fit (default:fit_) indent: string (default:'tab---') precede element object.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printy.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints as text the detail on a given object from the predomics package. — printy","title":"Prints as text the detail on a given object from the predomics package. — printy","text":"function summarize predomics package objects can Experiment,  Model, Population models ModelCollection","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/printy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints as text the detail on a given object from the predomics package. — printy","text":"","code":"printy(obj)"},{"path":"https://predomics.github.io/predomicspkg/reference/printy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints as text the detail on a given object from the predomics package. — printy","text":"obj: object predomics object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/resetTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Resets selection, mutation and mate tags to inactive — resetTags","title":"Resets selection, mutation and mate tags to inactive — resetTags","text":"Resets selection, mutation mate tags inactive","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/resetTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resets selection, mutation and mate tags to inactive — resetTags","text":"","code":"resetTags(pop, selected = FALSE, toBeMutated = FALSE, mate = -1)"},{"path":"https://predomics.github.io/predomicspkg/reference/resetTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resets selection, mutation and mate tags to inactive — resetTags","text":"pop: population evolved selected: set (default:FALSE) selected attribute, null. toBeMutated: set (default:FALSE) selected attribute, null. mate: set (default:-1) selected attribute, null.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/resetTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resets selection, mutation and mate tags to inactive — resetTags","text":"modified population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/runClassifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs the learning on a dataset — runClassifier","title":"Runs the learning on a dataset — runClassifier","text":"function runs classifier given dataset","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/runClassifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs the learning on a dataset — runClassifier","text":"","code":"runClassifier(X, y, clf, x_test = NULL, y_test = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/runClassifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs the learning on a dataset — runClassifier","text":"X: dataset classify y: variable predict clf: classifier object containing different settings classifier. x_test: NULL (default) dataset used evaluate models subset feature importance y_test: NULL (default) dataset used evaluate models subset feature importance","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/runClassifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs the learning on a dataset — runClassifier","text":"classifier along classification results sub-element","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/runCrossval.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the cross-validation emprirical and generalization scores — runCrossval","title":"Compute the cross-validation emprirical and generalization scores — runCrossval","text":"Compute cross-validation emprirical generalization scores.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/runCrossval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the cross-validation emprirical and generalization scores — runCrossval","text":"","code":"runCrossval(X, y, clf, lfolds = NULL, nfolds = 10, return.all = FALSE)"},{"path":"https://predomics.github.io/predomicspkg/reference/runCrossval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the cross-validation emprirical and generalization scores — runCrossval","text":"X: data matrix variables rows observations columns y: response vector clf: classifier parameter object nfolds: number folds cross-validation return.: return results crossvalidation feature stability testing","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/runCrossval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the cross-validation emprirical and generalization scores — runCrossval","text":"list containing empirical, generalisation scores fold well matrix mean values.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/savePopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a population to a file — savePopulation","title":"Save a population to a file — savePopulation","text":"can use function save population file disk (working directory)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/savePopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a population to a file — savePopulation","text":"","code":"savePopulation(pop, fileName, compress = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/savePopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a population to a file — savePopulation","text":"pop: population saved fileName: name file want save population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/saveResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the results of the fit function — saveResults","title":"Save the results of the fit function — saveResults","text":"Save results fit function","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/saveResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the results of the fit function — saveResults","text":"","code":"saveResults(fitResults, fileName, compress = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/scoreRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the ^y score of the model as a ratio — scoreRatio","title":"Computes the ^y score of the model as a ratio — scoreRatio","text":"Computes ^y score model ratio","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/scoreRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the ^y score of the model as a ratio — scoreRatio","text":"","code":"scoreRatio(class_1_score, class_2_score, epsilon = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/scoreRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the ^y score of the model as a ratio — scoreRatio","text":"class_1_score: sum score features class 1 class_2_score: sum score features class 2 epsilon: small value avoid Inf values ratio. can either specified setting classifier specified set minimum number machine (e.g. 2.23e-308). Caution adapted working types data.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/scoreRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the ^y score of the model as a ratio — scoreRatio","text":"vector containing predicted ^y score observation","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/selectBestPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the top significant best part of the population — selectBestPopulation","title":"Select the top significant best part of the population — selectBestPopulation","text":"function allows select best part population significantly different best model","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/selectBestPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the top significant best part of the population — selectBestPopulation","text":"","code":"selectBestPopulation(pop, score = \"fit_\", p = 0.05, k_penalty = 0, k_max = 0)"},{"path":"https://predomics.github.io/predomicspkg/reference/selectBestPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the top significant best part of the population — selectBestPopulation","text":"pop: list model objects score: attribute model used evaluation p: p-value threshold k_penalty: penalty apply score based k_sparsity (default:0) k_max: select best population given threshold. (default:0) selection performed.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/selectBestPopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select the top significant best part of the population — selectBestPopulation","text":"sub part population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/selector_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Does an elite selection on a population — selector_v1","title":"Does an elite selection on a population — selector_v1","text":"function template selectors, takes population number individuals select. result number bests element population.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/selector_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does an elite selection on a population — selector_v1","text":"","code":"selector_v1(pop, number, clf)"},{"path":"https://predomics.github.io/predomicspkg/reference/sim_inter.html","id":null,"dir":"Reference","previous_headings":"","what":"compare stability of different modeles (inter k) — sim_inter","title":"compare stability of different modeles (inter k) — sim_inter","text":"function compares stability different modeles (inter k)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sim_inter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare stability of different modeles (inter k) — sim_inter","text":"","code":"sim_inter(tmp, X)"},{"path":"https://predomics.github.io/predomicspkg/reference/sim_inter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare stability of different modeles (inter k) — sim_inter","text":"X: dataset classify tmp: digested result digest","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sim_inter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compare stability of different modeles (inter k) — sim_inter","text":"num","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sim_intra.html","id":null,"dir":"Reference","previous_headings":"","what":"compare stability of different modeles (intra k) — sim_intra","title":"compare stability of different modeles (intra k) — sim_intra","text":"function compares stability different modeles (intra k)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sim_intra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare stability of different modeles (intra k) — sim_intra","text":"","code":"sim_intra(tmp, X)"},{"path":"https://predomics.github.io/predomicspkg/reference/sim_intra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare stability of different modeles (intra k) — sim_intra","text":"X: dataset classify tmp: digested result digest","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sim_intra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compare stability of different modeles (intra k) — sim_intra","text":"num","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sortPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"sortPopulation — sortPopulation","title":"sortPopulation — sortPopulation","text":"Sort population according given attribute (evalToOrder)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sortPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sortPopulation — sortPopulation","text":"","code":"sortPopulation(pop, evalToOrder = \"fit_\", decreasing = TRUE)"},{"path":"https://predomics.github.io/predomicspkg/reference/sortPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sortPopulation — sortPopulation","text":"pop: population (list) evaluated predomics objects evalToOrder: attribute used sorting (default:fit_) decreasing: whether sorting decreasing (default:decreasing)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sortPopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sortPopulation — sortPopulation","text":"sorted population predomics objects","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"sota.glmnet — sota.glmnet","title":"sota.glmnet — sota.glmnet","text":"sota.glmnet herits terda use randomized rounding, using thus glmnet component","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sota.glmnet — sota.glmnet","text":"","code":"sota.glmnet(...)"},{"path":"https://predomics.github.io/predomicspkg/reference/sota.glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sota.glmnet — sota.glmnet","text":"object containing list parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.glmnet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sota.glmnet — sota.glmnet","text":"sota.glmnet: sota.glmnet classifier parameter function","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.rf.html","id":null,"dir":"Reference","previous_headings":"","what":"sota.rf — sota.rf","title":"sota.rf — sota.rf","text":"sota.svm wrapper executes svm using framework predomics package.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sota.rf — sota.rf","text":"","code":"sota.rf(   sparsity = c(1:30),   objective = \"auc\",   max.nb.features = 1000,   intercept = \"NULL\",   language = \"rf\",   evalToFit = \"auc_\",   k_penalty = 0,   ntree = 500,   mtry = NULL,   replace = TRUE,   classwt = NULL,   sampsize = NULL,   nodesize = NULL,   maxnodes = NULL,   importance = FALSE,   localImp = FALSE,   nPerm = 1,   norm.votes = TRUE,   do.trace = FALSE,   keep.forest = TRUE,   corr.bias = FALSE,   keep.inbag = FALSE,   popSaveFile = \"NULL\",   seed = \"NULL\",   nCores = 4,   verbose = TRUE,   plot = FALSE,   warnings = FALSE,   debug = FALSE,   print_ind_method = \"short\",   experiment.id = NULL,   experiment.description = NULL,   experiment.save = \"nothing\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/sota.rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sota.rf — sota.rf","text":"language language used different algorithms bin, bininter, ter, terinter, ratio, (default:\"sota\") sparsity: number features given model. vector multiple lengths. objective: prediction mode (default: auc) max.nb.features: create glmnet object using top significant features (default:1000) intercept: (Interceot given model) (default:NULL) evalToFit: model property used select best model among different k_sparsities (default: auc_) k_penalty: Penalization fit k_sparsity (default: 0) ntree: ?? mtry: Number variables randomly sampled candidates split. Note default values different classification (sqrt(p) p number variables x) regression (p/3) replace: sampling cases done without replacement? classwt: Priors classes. Need add one. Ignored regression. sampsize: Size(s) sample draw. classification, sampsize vector length number strata, sampling stratified strata, elements sampsize indicate numbers drawn strata. nodesize: Minimum size terminal nodes. Setting number larger causes smaller trees grown (thus take less time). Note default values different classification (1) regression (5). maxnodes: Maximum number terminal nodes trees forest can . given, trees grown maximum possible (subject limits nodesize). set larger maximum possible, warning issued. importance: ?? localImp: ?? nPerm: ?? norm.votes: (??) .trace: ?? keep.forest: ?? cor.bias: ?? keep.inbag: ?? popSaveFile: (??) seed: seed used reproductibility. seed=NULL taken account (default:NULL). nCores: number CPUs run programm parallel plot: Plot graphics indicating evolution simulation (default:FALSE) verbose: print information progress algorithm (default:TRUE) warnings: Print warnings runnig (default:FALSE). debug: print information progress algorithm (default:FALSE) print_ind_method: One c(\"short\",\"graphical\") indicates print model subsequently population run (default:\"short\"). experiment.id: id experiment used plots comparitive analyses (default learner's name, specified) experiment.description: longer description experiment. important many experiments run can also printed printExperiment function. experiment.save: Data experiment can saved different levels completness, options selected c(\"nothing\", \"minimal\", \"full\"), default \"minimal\"","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.rf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sota.rf — sota.rf","text":"object containing list parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.rf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sota.rf — sota.rf","text":"sota.rf: launching Random Forest classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.svm.html","id":null,"dir":"Reference","previous_headings":"","what":"sota.svm — sota.svm","title":"sota.svm — sota.svm","text":"sota.svm wrapper executes svm using framework predomics package.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.svm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sota.svm — sota.svm","text":"","code":"sota.svm(   sparsity = c(1:30),   objective = \"auc\",   max.nb.features = 1000,   intercept = 0,   language = \"svm\",   evalToFit = \"auc_\",   k_penalty = 0,   scaled = TRUE,   type = NULL,   kernel = \"rbfdot\",   kpar = \"automatic\",   C = c(1e-04, 0.001, 0.01, 0.1, 1, 10, 100, 1000, 10000),   nu = 0.2,   epsilon.hp = 0.1,   prob.model = FALSE,   class.weights = NULL,   fit = TRUE,   cache = 40,   tol = 0.001,   shrinking = TRUE,   na.action = na.omit,   popSaveFile = \"NULL\",   seed = \"NULL\",   nCores = 4,   verbose = TRUE,   plot = FALSE,   warnings = FALSE,   debug = FALSE,   print_ind_method = \"short\",   experiment.id = NULL,   experiment.description = NULL,   experiment.save = \"nothing\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/sota.svm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sota.svm — sota.svm","text":"language language used different algorithms bin, bininter, ter, terinter, ratio, (default:\"sota\") sparsity: number features given model. vector multiple lengths. objective: prediction mode (default: auc) max.nb.features: create glmnet object using top significant features (default:1000) intercept: (Interceot given model) (default:NULL) evalToFit: model property used select best model among different k_sparsities (default: auc_) k_penalty: Penalization fit k_sparsity (default: 0) scaled: ?? type: ?? kernel: ?? kpar: ?? C: (??) nu: ?? epsilon.hp: (??) (SVM) prob.model: ?? class.weights: ?? fit: ?? cache: (??) tol: ?? shrinking: ?? na.action: ?? popSaveFile: (??) seed: seed used reproductibility. seed=NULL taken account (default:NULL). nCores: number CPUs run program parallel plot: Plot graphics indicating evolution simulation (default:FALSE) verbose: print information progress algorithm (default:TRUE) warnings: Print warnings runnig (default:FALSE). debug: print information progress algorithm (default:FALSE) print_ind_method: One c(\"short\",\"graphical\") indicates print model subsequently population run (default:\"short\"). experiment.id: id experiment used plots comparitive analyses (default learner's name, specified) experiment.description: longer description experiment. important many experiments run can also printed printExperiment function. experiment.save: Data experiment can saved different levels completness, options selected c(\"nothing\", \"minimal\", \"full\"), default \"minimal\"","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.svm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sota.svm — sota.svm","text":"object containing list parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sota.svm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sota.svm — sota.svm","text":"sota.svm: launching svm classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sparseVecToModel.html","id":null,"dir":"Reference","previous_headings":"","what":"sparseVecToModel — sparseVecToModel","title":"sparseVecToModel — sparseVecToModel","text":"Builds model object based model sparse (short) format.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sparseVecToModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sparseVecToModel — sparseVecToModel","text":"","code":"sparseVecToModel(X, y, v, clf, eval.all = FALSE, obj = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/sparseVecToModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sparseVecToModel — sparseVecToModel","text":"X: dataset y: labels v: vector indexes (example v=c(1,11)) clf: classifier information eval.: model evaluated (default:FALSE) obj: object model add model (default:NULL)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/sparseVecToModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sparseVecToModel — sparseVecToModel","text":"model object","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/summarySE.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot performance scores for multiple learners. — summarySE","title":"Plot performance scores for multiple learners. — summarySE","text":"summarySE gives count, mean, standard deviation, standard error mean, confidence interval (default 95%).","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/summarySE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot performance scores for multiple learners. — summarySE","text":"","code":"summarySE(   data = NULL,   measurevar,   groupvars = NULL,   na.rm = FALSE,   conf.interval = 0.95,   .drop = TRUE )"},{"path":"https://predomics.github.io/predomicspkg/reference/summarySE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot performance scores for multiple learners. — summarySE","text":"data: data frame groupvars: vector containing names columns contain grouping variables na.rm: boolean indicates whether ignore NA's conf.interval: percent range confidence interval (default 95%)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/summarySE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot performance scores for multiple learners. — summarySE","text":"transformed data frame information different errors confidence.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/t2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Type 2 diabetes (frequencies) BGI — t2d","title":"Type 2 diabetes (frequencies) BGI — t2d","text":"dataset consists frequency abundance files downloaded http://waldronlab.io/curatedMetagenomicData/ list containing two elements: () X data matrix 1045 species 344 observations (ii) patient class = -1 (n=170) healthy controls (n=174)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/t2d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Type 2 diabetes (frequencies) BGI — t2d","text":"Qin, Junjie, Yingrui Li, Zhiming Cai, Shenghui Li, Jianfeng Zhu, Fan Zhang, Suisha Liang, et al “metagenome-wide association study gut microbiota type 2 diabetes.” Nature (September 26, 2012).","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/t2dw.html","id":null,"dir":"Reference","previous_headings":"","what":"Type 2 diabetes (frequencies) Women Sweden — t2dw","title":"Type 2 diabetes (frequencies) Women Sweden — t2dw","text":"dataset consists frequency abundance files downloaded http://waldronlab.io/curatedMetagenomicData/ list containing two elements: () X data matrix 1045 species 145 observations (ii) patient class = -1 (n=53) healthy controls (n=43) Caution, dataset also class 0 IG patients, needs omited X y","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/t2dw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Type 2 diabetes (frequencies) Women Sweden — t2dw","text":"Karlsson, Fredrik H, Valentina Tremaroli, Intawat Nookaew, Göran Bergström, Carl Johan Behre, Björn Fagerberg, Jens Nielsen, Fredrik Bäckhed. “Gut metagenome European women normal, impaired diabetic glucose control.” Nature (May 29, 2013): 1–7.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_Couples.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag the couples — tag_Couples","title":"Tag the couples — tag_Couples","text":"function selects constitutes couples give next generation individuals adding couple id mate attribute.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_Couples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag the couples — tag_Couples","text":"","code":"tag_Couples(pop, parents)"},{"path":"https://predomics.github.io/predomicspkg/reference/tag_Couples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag the couples — tag_Couples","text":"pop: population couples constituted; parents: parent candidate individuals couples  selected.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_Couples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tag the couples — tag_Couples","text":"parent population couple tags set.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_SelectElite.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag individuals for parenting — tag_SelectElite","title":"Tag individuals for parenting — tag_SelectElite","text":"Function add tag \"selected\" best individuals population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_SelectElite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag individuals for parenting — tag_SelectElite","text":"","code":"tag_SelectElite(clf, pop, nbToSelect)"},{"path":"https://predomics.github.io/predomicspkg/reference/tag_SelectElite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag individuals for parenting — tag_SelectElite","text":"clf: classifier object pop: population want add tag nbToSelect: number individuals going select population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_SelectElite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tag individuals for parenting — tag_SelectElite","text":"population given input `nbToSelect` bests individuals `$selected = TRUE`","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_SelectRandom.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomly tag selected individuals parenting — tag_SelectRandom","title":"Randomly tag selected individuals parenting — tag_SelectRandom","text":"function turns selected switch individual  selected survive generation among pool parents  next generation.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_SelectRandom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomly tag selected individuals parenting — tag_SelectRandom","text":"","code":"tag_SelectRandom(clf, pop, nbToSelect)"},{"path":"https://predomics.github.io/predomicspkg/reference/tag_SelectRandom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomly tag selected individuals parenting — tag_SelectRandom","text":"clf: classifier object pop: population selection process performed. nbToSelect: number individuals going select population","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_SelectRandom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomly tag selected individuals parenting — tag_SelectRandom","text":"population given input `nbToSelect` individuals `selected = TRUE`","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_ToBeMutated.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag individuals for mutation — tag_ToBeMutated","title":"Tag individuals for mutation — tag_ToBeMutated","text":"Function add tag \"toBeMutated\" randomly sampled part  population. individuals (best ones) protected mutation genetic decline happen.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_ToBeMutated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag individuals for mutation — tag_ToBeMutated","text":"","code":"tag_ToBeMutated(pop, mutate_size, protected = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/tag_ToBeMutated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag individuals for mutation — tag_ToBeMutated","text":"pop: population individuals mutated selected mutate_size: number individuals mutate protected: index individuals mutated.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_ToBeMutated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tag individuals for mutation — tag_ToBeMutated","text":"population given input `mutate_size` individuals `toBeMutated = TRUE`","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Add `selected` tag using elite and random selection — tag_select","title":"Add `selected` tag using elite and random selection — tag_select","text":"function combines tag_SelectElite tag_SelectRandom tag desired individuals population following proportion given clf","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add `selected` tag using elite and random selection — tag_select","text":"","code":"tag_select(X, y, clf, pop)"},{"path":"https://predomics.github.io/predomicspkg/reference/tag_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add `selected` tag using elite and random selection — tag_select","text":"X: Unused still compatibility y: `X` clf: classifier object parameters defined pop: population want apply selection","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/tag_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add `selected` tag using elite and random selection — tag_select","text":"population tag `selected` individuals","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terBeam.html","id":null,"dir":"Reference","previous_headings":"","what":"terbeam — terBeam","title":"terbeam — terBeam","text":"terbeam model search algorithm beam search approach.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terBeam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"terbeam — terBeam","text":"","code":"terBeam(   sparsity = 1:5,   max.nb.features = 1000,   maxNbOfModels = 10000,   nbBest = round(maxNbOfModels/10),   nbVeryBest = round(maxNbOfModels/100),   final.pop.perc = 100,   popSaveFile = \"NULL\",   saveFiles = FALSE,   language = \"terinter\",   scoreFormula = scoreRatio,   epsilon = \"NULL\",   objective = \"auc\",   k_penalty = 0,   evalToFit = \"auc_\",   estimate_coefs = FALSE,   intercept = \"NULL\",   testAllSigns = FALSE,   plot = FALSE,   verbose = TRUE,   warnings = FALSE,   debug = FALSE,   print_ind_method = \"short\",   parallelize.folds = TRUE,   nCores = 4,   seed = \"NULL\",   experiment.id = \"NULL\",   experiment.description = \"NULL\",   experiment.save = \"nothing\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/terBeam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"terbeam — terBeam","text":"language language used different algorithms bin, bininter, ter, terinter, ratio, (default:\"terinter\") sparsity: number features given model. vector multiple lengths. maxNbOfModels: number models explored given k_sparsity. equivalent population size terga. nbVeryBest: number features kept appear best models. kept even frequent best models (default: 1 percent maxNbOfModels). nbBest: number features used build k+1 sparsity combinations (default: 10 percent maxNbOfModels). final.pop.perc: percentage nbVeryBest translates number models kept k_sparsity. popSaveFile: (??) saveFiles: ?? scoreFormula: Function contains ratio Formula specific ones epsilon: small value used ratio language (useCustomLanguage) (default: NULL). null going calculated minimum value X divided 10. objective: can auc, cor aic. Terga can also predict regression, class prediction. (default:auc) max.nb.features: focuses subset top significant features (default:1000) estimate_coefs: non ternary solution aic objective (default:FALSE) evalToFit: model performance attribute use fitting score (default:\"fit_\"). choices c(\"auc_\",\"accuracy_\",\"precision_\",\"recall_\",\"f_score_\") k_penalty: Penalization fit k_sparsity (default: 0) intercept: (??) (default:NULL) testAllSigns: ?? plot: Plot different graphics (default:FALSE). verbose: print information progress algorithm (default:TRUE) warnings: Print warnings runnig (default:FALSE). debug: print debug information (default:FALSE) print_ind_method: One c(\"short\",\"graphical\") indicates print model subsequently population run (default:\"short\"). nCores: number cores execute program. nCores=1 program runs non parallel mode parallelize.folds: parallelize folds cross-validating (default:TRUE) seed: seed used reproductibility. seed=NULL taken account (default:NULL). experiment.id: id experiment used plots comparitive analyses (default learner's name, specified) experiment.description: longer description experiment. important many experiments run can also printed printExperiment function. experiment.save: Data experiment can saved different levels completness, options selected c(\"nothing\", \"minimal\", \"full\"), default \"minimal\" parallel: parallel","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terBeam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"terbeam — terBeam","text":"object containing list parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terBeam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"terbeam — terBeam","text":"terbeam: ternary beam searching algorithm","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terda.html","id":null,"dir":"Reference","previous_headings":"","what":"terda — terda","title":"terda — terda","text":"terbeam model search algorithm.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"terda — terda","text":"","code":"terda(   sparsity = 5,   nIterations = 5,   max.nb.features = 1000,   kBest = \"NULL\",   method = \"glmnetRR\",   kStep = \"NULL\",   vartype = \"real\",   gamma = 0.7,   nRR = 1,   lb = -1,   ub = 1,   language = \"terinter\",   scoreFormula = scoreRatio,   epsilon = \"NULL\",   nblambdas = 1000,   objective = \"auc\",   evalToFit = \"auc_\",   k_penalty = 0,   intercept = \"NULL\",   popSaveFile = \"NULL\",   final.pop.perc = 100,   alpha = 0.5,   plot = FALSE,   verbose = TRUE,   warnings = FALSE,   debug = FALSE,   print_ind_method = \"short\",   parallelize.folds = TRUE,   nCores = 4,   seed = \"NULL\",   experiment.id = \"NULL\",   experiment.description = \"NULL\",   experiment.save = \"nothing\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/terda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"terda — terda","text":"language language used different algorithms bin, bininter, ter, terinter, ratio, (default:\"terinter\") sparsity: number features given model. vector multiple lengths. nIterations: ?? max.nb.features: create glmnet object using top significant features (default:1000) kBest: ?? method: ?? kStep: ?? vartype: (??) gamma: ?? nRR: (??) (default:FALSE) lb: ?? ub: ?? scoreFormula: Function contains ratio Formula specific ones epsilon: small value used ratio language (useCustomLanguage) (default: NULL). null going calculated minimum value X divided 10. objective: can auc, cor aic. Terga can also predict regression, class prediction. (default:auc) evalToFit: model performance attribute use fitting score (default:\"fit_\"). choices c(\"auc_\",\"accuracy_\",\"precision_\",\"recall_\",\"f_score_\") k_penalty: Penalization fit k_sparsity (default: 0) intercept: (??) (default:NULL) popSaveFile: (??) final.pop.perc: ?? plot: Plot different graphics (default:FALSE). verbose: print information progress algorithm (default:TRUE) warnings: Print warnings runnig (default:FALSE). debug: print debug infotmation activated (default: FALSE) print_ind_method: One c(\"short\",\"graphical\") indicates print model subsequently population run (default:\"short\"). parallelize.folds: parallelize folds cross-validating (default:TRUE) nCores: number cores execute program. nCores=1 program runs non parallel mode seed: seed used reproductibility. seed=NULL taken account (default:NULL). experiment.id: id experiment used plots comparitive analyses (default learner's name, specified) experiment.description: longer description experiment. important many experiments run can also printed printExperiment function. experiment.save: Data experiment can saved different levels completness, options selected c(\"nothing\", \"minimal\", \"full\"), default \"minimal\"","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"terda — terda","text":"object containing list parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"terda — terda","text":"terda: terda classifier parameter function","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terga1.html","id":null,"dir":"Reference","previous_headings":"","what":"terga1 — terga1","title":"terga1 — terga1","text":"terga1 model search algorithm based genetic algorithms (GA). “genome” “individual” context combination features associated together compute score prediction model. Depending type fitting function maximized fatures weighed specific coefficients. short algorithm based different operations crossing, mutating evolving different “individuals” evaluating fitness “environment” represented variable predicted.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terga1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"terga1 — terga1","text":"","code":"terga1(   sparsity = c(1:10),   size_pop = 100,   size_world = \"NULL\",   max.nb.features = 1000,   popSourceFile = \"NULL\",   popSaveFile = \"NULL\",   language = \"terinter\",   scoreFormula = scoreRatio,   epsilon = \"NULL\",   unique_vars = FALSE,   objective = \"auc\",   k_penalty = 0,   evalToFit = \"fit_\",   estimate_coefs = FALSE,   intercept = \"NULL\",   select_type = \"mixed\",   select_perc1 = 20,   select_perc2 = 30,   perc_best_ancestor = 10,   mutate_size = 70,   mutate_rate = 50,   nb_generations = 100,   convergence = TRUE,   convergence_steps = 10,   evolve_k1 = TRUE,   plot = FALSE,   verbose = TRUE,   warnings = FALSE,   debug = FALSE,   print_ind_method = \"short\",   parallelize.folds = TRUE,   nCores = 4,   seed = \"NULL\",   experiment.id = \"NULL\",   experiment.description = \"NULL\",   experiment.save = \"nothing\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/terga1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"terga1 — terga1","text":"language language used different algorithms bin, bininter, ter, terinter, ratio, (default:\"terinter\") sparsity: number features given model. vector multiple lengths. size_pop: number individuals population evolved. size_world: number features dataset. max.nb.features: focuses subset top significant features (default:1000) popSourceFile: population models can start first generation evolved (default:NULL). popSaveFile: (??) scoreFormula: Function contains ratio Formula specific ones epsilon: small value used ratio language (default: NULL). null going calculated minimum value X divided 10. unique_vars: logical (default: FALSE) indicates weather unique variables can used model population. objective: can auc, cor aic. Terga can also predict regression, class prediction. (default:auc) estimate_coefs: non ternary solution aic objective (default:FALSE) intercept: (Interceot given model) (default:NULL) evalToFit: model performance attribute use fitting score (default:\"fit_\"). choices c(\"auc_\",\"accuracy_\",\"precision_\",\"recall_\",\"f_score_\") k_penalty: Penalization fit k_sparsity (default: 0) select_type: selection operator type. can mixed, elite tournoi (default: mixed) select_perc1: percentage individuals selected elite select_perc2: percentage individuals selected tournoi perc_best_ancestor: percentage best ancentors seeding new population mutate_size: percentage individuals population mutated mutate_rate: percentage features individual mutated plot: plot graphics indicating evolution simulation (default:FALSE) convergence: algorithm converge best individual improving (default:TRUE). convergence_steps: number generations consider convergence (default:10). evolve_k1: weather evaluate exhaustively features k_sparse=1. take lot time dataset large, thus possibility evolve using GA. (default:TRUE) verbose: print information progress algorithm (default:TRUE) warnings: Print warnings runnig (default:FALSE). debug: print debug information (default:FALSE) print_ind_method: One c(\"short\",\"graphical\") indicates print model subsequently population run (default:\"short\"). parallelize.folds: parallelize folds cross-validating (default:TRUE) nb_generations: maximum number generations evolve population. nCores: number cores execute program. nCores=1 program runs non parallel mode seed: seed used reproductibility. seed=NULL taken account (default:NULL). experiment.id: id experiment used plots comparitive analyses (default learner's name, specified) experiment.description: longer description experiment. important many experiments run can also printed printExperiment function. experiment.save: Data experiment can saved different levels completness, options selected c(\"nothing\", \"minimal\", \"full\"), default \"minimal\"","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terga1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"terga1 — terga1","text":"object containing list parameters classifier","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terga1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"terga1 — terga1","text":"terga1: Model search algorithm based genetic algorithms (GA)","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terga2.html","id":null,"dir":"Reference","previous_headings":"","what":"Model search algorithm based on genetic algorithms (GA). — terga2","title":"Model search algorithm based on genetic algorithms (GA). — terga2","text":"TerGA model search algorithm based genetic algorithms (GA).  “individual” (.e. genome) context combination features  associated together using selected \"language\" compute score  constitute prediction model. Depending type fitting (.e. evaluation) function maximized, fatures weighed specific coefficients.  short algorithm based different operations crossing, mutating  evolving different “individuals” evaluating fitness “environment”  represented variable predicted.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terga2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model search algorithm based on genetic algorithms (GA). — terga2","text":"","code":"terga2(   sparsity = c(1:10),   max.nb.features = 1000,   language = \"terinter\",   objective = \"auc\",   evalToFit = \"accuracy_\",   k_penalty = 0,   estimate_coefs = FALSE,   scoreFormula = scoreRatio,   epsilon = \"NULL\",   size_pop = 100,   size_pop_random = size_pop,   final.pop.perc = 100,   in_pop = \"NULL\",   popSourceFile = \"NULL\",   popSaveFile = \"NULL\",   individual_vec = individual_vec_v2,   randomSigns = FALSE,   unique_vars = FALSE,   select_perc = 25,   selector = list(selector_v1, selector_v2),   select_percByMethod = list(50, 50),   cross = TRUE,   crosser = crossingIndividual_v3,   mutate = TRUE,   mutate_size = 75,   mutate_rate = 50,   mutator = mutator_v2,   evolver = \"v2m\",   nb_generations = 100,   convergence = TRUE,   convergence_steps = 10,   evolve_k1 = TRUE,   plot = FALSE,   verbose = FALSE,   warnings = FALSE,   debug = FALSE,   print_ind_method = \"short\",   parallelize.folds = TRUE,   nCores = 4,   seed = \"NULL\",   maxTime = Inf,   experiment.id = \"NULL\",   experiment.description = \"NULL\",   experiment.save = \"nothing\" )"},{"path":"https://predomics.github.io/predomicspkg/reference/terga2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model search algorithm based on genetic algorithms (GA). — terga2","text":"language language used different algorithms  bin, bininter, ter, terinter, (default:\"terinter\") size_pop_random number individuals initialized randomly. used  metal algorithm (.e. aggregator method). sparsity: number features given model (default:1:10).  vector model-size range (number features used model). objective: task learned can either classification  (auc) can regression (cor) (default:auc). evalToFit: model performance attribute use fitting score (default:\"accuracy_\").  choices c(\"accuracy_\", \"auc_\", \"precision_\",\"recall_\",\"f_score_\")  classification task. can either rho, rho-squared minimizing  standar error regression regression task. k_penalty: Model-size penalization effect applied fit scpre (default: 0). estimate_coefs: _deprecated_ particular option regression mode aic objective (default:FALSE) max.nb.features: number smaller number variables dataset, max.nb.features significant features selected  dataset restricted (default:1000). size_pop: number individuals population evolved (default:100) final.pop.perc: percentage final population returned (default:100) in_pop: specific population models can evolved. particulary useful metal algorithm popSourceFile: possible load population models already learned . option can specify file (default:NULL). popSaveFile: population models evolved, can store  another file (default:NULL). scoreFormula: Function contains ratio Formula specific ones epsilon: small value used ratio language  (useCustomLanguage) (default: NULL). null going calculated  minimum value X divided 10. individual_vec: function used generate individual  (default:individual_vec_v2). randomSigns: generating individual composed set features,  can set coefficients variables -1 1 randomly (default:FALSE). unique_vars: performing operations multiple individuals can  individual multiple time feature. set TRUE  individual destroyed (default:FALSE) select_perc: percentage population selected crossing/mutation  (default:50) selector: selection process, parent population can selected using different strategies. instance default process performed using elite random selection (default:list(selector_v1, selector_v2)). select_percByMethod: list contaning percentage individuals methods specified selector get. cross: swithch, activates crossing operator (default:TRUE). crosser: method applied cross individuals together (default:crossingIndividual_v4). mutate: swithch, activates mutation operator (default:TRUE). mutate_size: percentage individuals population mutated (default:70). mutate_rate: percentage features individual mutated (default:50). mutator: method applied mutate individuals (default:mutator_v2). operations can , deletion, insertion changing coeffiecient (-1 1 vice-versa). evolver: method used evolve individuals together. core algorithm can one different implementations  c(\"v1\", \"v2\", \"v3\",\"v4\") default one \"v4\". nb_generations: maximum number generations evolve population. convergence: switch activates automatic convergence algorithm best individual improving (default:TRUE). convergence_steps: number generations consider  convergence (default:10). evolve_k1: Whether evaluate exhaustively features  model size = 1. take lot time dataset large, thus possibility evolve using GA interesting. (default:TRUE) plot: Plot graphics indicating evolution simulation (default:FALSE) verbose: Print information progress algorithm (default:FALSE). warnings: Print warnings runnig (default:FALSE). debug: Print detailed information progress algorithm  (default:FALSE) print_ind_method: One c(\"short\",\"graphical\") indicates print  model subsequently population run (default:\"short\"). parallelize.folds: parallelize folds cross-validating (default:TRUE). nCores: number cores execute program. nCores = 1  program runs non parallel mode seed: seed used reproductibility. seed=NULL  taken account (default:NULL). maxTime: can use time limit evolve population (default:Inf). experiment.id: id experiment used plots  comparitive analyses (default learner's name, specified) experiment.description: longer description experiment.  important many experiments run can also printed  printExperiment function. experiment.save: Data experiment can saved different  levels completness, options selected  c(\"nothing\", \"minimal\", \"full\"), default \"minimal\"","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/terga2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model search algorithm based on genetic algorithms (GA). — terga2","text":"object classifier class, containing list parameters","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/updateModelIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"updateModelIndex — updateModelIndex","title":"updateModelIndex — updateModelIndex","text":"Update index model objectn.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/updateModelIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"updateModelIndex — updateModelIndex","text":"","code":"updateModelIndex(obj, features = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/updateModelIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"updateModelIndex — updateModelIndex","text":"obj: object model features: list features overrides clf$data$features exists.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/updateModelIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"updateModelIndex — updateModelIndex","text":"object type input, updated","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/updateObjectIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"updateObjectIndex — updateObjectIndex","title":"updateObjectIndex — updateObjectIndex","text":"Update index model, population, modelCollection.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/updateObjectIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"updateObjectIndex — updateObjectIndex","text":"","code":"updateObjectIndex(obj, features = NULL)"},{"path":"https://predomics.github.io/predomicspkg/reference/updateObjectIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"updateObjectIndex — updateObjectIndex","text":"obj: object can model, population, modelCollection features: list features overrides clf$data$features exists.","code":""},{"path":"https://predomics.github.io/predomicspkg/reference/updateObjectIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"updateObjectIndex — updateObjectIndex","text":"object type input, updated","code":""}]
